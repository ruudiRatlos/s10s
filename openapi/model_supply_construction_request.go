/*
SpaceTraders API

SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.

API version: 2.0.0
Contact: joel@spacetraders.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SupplyConstructionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplyConstructionRequest{}

// SupplyConstructionRequest struct for SupplyConstructionRequest
type SupplyConstructionRequest struct {
	// Symbol of the ship to use.
	ShipSymbol string `json:"shipSymbol"`
	// The symbol of the good to supply.
	TradeSymbol string `json:"tradeSymbol"`
	// Amount of units to supply.
	Units                int32 `json:"units"`
	AdditionalProperties map[string]interface{}
}

type _SupplyConstructionRequest SupplyConstructionRequest

// NewSupplyConstructionRequest instantiates a new SupplyConstructionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplyConstructionRequest(shipSymbol string, tradeSymbol string, units int32) *SupplyConstructionRequest {
	this := SupplyConstructionRequest{}
	this.ShipSymbol = shipSymbol
	this.TradeSymbol = tradeSymbol
	this.Units = units
	return &this
}

// NewSupplyConstructionRequestWithDefaults instantiates a new SupplyConstructionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplyConstructionRequestWithDefaults() *SupplyConstructionRequest {
	this := SupplyConstructionRequest{}
	return &this
}

// GetShipSymbol returns the ShipSymbol field value
func (o *SupplyConstructionRequest) GetShipSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShipSymbol
}

// GetShipSymbolOk returns a tuple with the ShipSymbol field value
// and a boolean to check if the value has been set.
func (o *SupplyConstructionRequest) GetShipSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipSymbol, true
}

// SetShipSymbol sets field value
func (o *SupplyConstructionRequest) SetShipSymbol(v string) {
	o.ShipSymbol = v
}

// GetTradeSymbol returns the TradeSymbol field value
func (o *SupplyConstructionRequest) GetTradeSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TradeSymbol
}

// GetTradeSymbolOk returns a tuple with the TradeSymbol field value
// and a boolean to check if the value has been set.
func (o *SupplyConstructionRequest) GetTradeSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TradeSymbol, true
}

// SetTradeSymbol sets field value
func (o *SupplyConstructionRequest) SetTradeSymbol(v string) {
	o.TradeSymbol = v
}

// GetUnits returns the Units field value
func (o *SupplyConstructionRequest) GetUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *SupplyConstructionRequest) GetUnitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Units, true
}

// SetUnits sets field value
func (o *SupplyConstructionRequest) SetUnits(v int32) {
	o.Units = v
}

func (o SupplyConstructionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplyConstructionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shipSymbol"] = o.ShipSymbol
	toSerialize["tradeSymbol"] = o.TradeSymbol
	toSerialize["units"] = o.Units

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SupplyConstructionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shipSymbol",
		"tradeSymbol",
		"units",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupplyConstructionRequest := _SupplyConstructionRequest{}

	err = json.Unmarshal(data, &varSupplyConstructionRequest)

	if err != nil {
		return err
	}

	*o = SupplyConstructionRequest(varSupplyConstructionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "shipSymbol")
		delete(additionalProperties, "tradeSymbol")
		delete(additionalProperties, "units")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSupplyConstructionRequest struct {
	value *SupplyConstructionRequest
	isSet bool
}

func (v NullableSupplyConstructionRequest) Get() *SupplyConstructionRequest {
	return v.value
}

func (v *NullableSupplyConstructionRequest) Set(val *SupplyConstructionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyConstructionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyConstructionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyConstructionRequest(val *SupplyConstructionRequest) *NullableSupplyConstructionRequest {
	return &NullableSupplyConstructionRequest{value: val, isSet: true}
}

func (v NullableSupplyConstructionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyConstructionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
