openapi: 3.0.0
info:
  contact:
    email: joel@spacetraders.io
    name: Joel Brubaker
  description: |+
    SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.

    The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.

    ```json http
    {
      "method": "GET",
      "url": "https://api.spacetraders.io/v2",
    }
    ```

    Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.

    We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.


  license:
    name: No Permission
    url: https://choosealicense.com/no-permission/
  title: SpaceTraders API
  version: 2.0.0
servers:
- description: v2
  url: https://api.spacetraders.io/v2
security:
- AgentToken: []
tags:
- description: Agents
  name: Agents
- description: Contracts
  name: Contracts
- description: Factions
  name: Factions
- description: Fleet
  name: Fleet
- description: Systems
  name: Systems
paths:
  /:
    get:
      description: |-
        Return the status of the game server.
        This also includes a few global elements, such as announcements, server reset dates and leaderboards.
      operationId: get-status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_status_200_response'
          description: Fetched status successfully.
      security:
      - {}
      - AgentToken: []
      summary: Get Status
      tags: []
  /register:
    post:
      description: "Creates a new agent and ties it to an account. \nThe agent symbol\
        \ must consist of a 3-14 character string, and will be used to represent your\
        \ agent. This symbol will prefix the symbol of every ship you own. Agent symbols\
        \ will be cast to all uppercase characters.\n\nThis new agent will be tied\
        \ to a starting faction of your choice, which determines your starting location,\
        \ and will be granted an authorization token, a contract with their starting\
        \ faction, a command ship that can fly across space with advanced capabilities,\
        \ a small probe ship that can be used for reconnaissance, and 150,000 credits.\n\
        \n> #### Keep your token safe and secure\n>\n> Save your token during the\
        \ alpha phase. There is no way to regenerate this token without starting a\
        \ new agent. In the future you will be able to generate and manage your tokens\
        \ from the SpaceTraders website.\n\nIf you are new to SpaceTraders, It is\
        \ recommended to register with the COSMIC faction, a faction that is well\
        \ connected to the rest of the universe. After registering, you should try\
        \ our interactive [quickstart guide](https://docs.spacetraders.io/quickstart/new-game)\
        \ which will walk you through basic API requests in just a few minutes."
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register_request'
        description: ""
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/register_201_response'
          description: Succesfully registered.
      security: []
      summary: Register New Agent
      tags: []
  /systems:
    get:
      description: Return a paginated list of all systems.
      operationId: get-systems
      parameters:
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_systems_200_response'
          description: Successfully listed systems.
      security:
      - {}
      - AgentToken: []
      summary: List Systems
      tags:
      - Systems
  /systems/{systemSymbol}:
    get:
      description: Get the details of a system.
      operationId: get-system
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          default: X1-OE
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_system_200_response'
          description: Successfully fetched the system.
      security:
      - {}
      - AgentToken: []
      summary: Get System
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints:
    get:
      description: |-
        Return a paginated list of all of the waypoints for a given system.

        If a waypoint is uncharted, it will return the `Uncharted` trait instead of its actual traits.
      operationId: get-system-waypoints
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      - description: Filter waypoints by type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/WaypointType'
        style: form
      - description: Filter waypoints by one or more traits.
        explode: true
        in: query
        name: traits
        required: false
        schema:
          $ref: '#/components/schemas/get_system_waypoints_traits_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_system_waypoints_200_response'
          description: Successfully fetched all waypoints in the system.
      security:
      - {}
      - AgentToken: []
      summary: List Waypoints in System
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}:
    get:
      description: |-
        View the details of a waypoint.

        If the waypoint is uncharted, it will return the 'Uncharted' trait instead of its actual traits.
      operationId: get-waypoint
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_waypoint_200_response'
          description: Successfully fetched waypoint.
      security:
      - {}
      - AgentToken: []
      summary: Get Waypoint
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}/market:
    get:
      description: |-
        Retrieve imports, exports and exchange data from a marketplace. Requires a waypoint that has the `Marketplace` trait to use.

        Send a ship to the waypoint to access trade good prices and recent transactions. Refer to the [Market Overview page](https://docs.spacetraders.io/game-concepts/markets) to gain better a understanding of the market in the game.
      operationId: get-market
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_market_200_response'
          description: Successfully fetched the market.
      security:
      - {}
      - AgentToken: []
      summary: Get Market
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}/shipyard:
    get:
      description: Get the shipyard for a waypoint. Requires a waypoint that has the
        `Shipyard` trait to use. Send a ship to the waypoint to access data on ships
        that are currently available for purchase and recent transactions.
      operationId: get-shipyard
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_shipyard_200_response'
          description: Successfully fetched the shipyard.
      security:
      - {}
      - AgentToken: []
      summary: Get Shipyard
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}/jump-gate:
    get:
      description: "Get jump gate details for a waypoint. Requires a waypoint of type\
        \ `JUMP_GATE` to use.\n\nWaypoints connected to this jump gate can be "
      operationId: get-jump-gate
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_jump_gate_200_response'
          description: Successfully fetched jump gate.
      security:
      - {}
      - AgentToken: []
      summary: Get Jump Gate
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}/construction:
    get:
      description: Get construction details for a waypoint. Requires a waypoint with
        a property of `isUnderConstruction` to be true.
      operationId: get-construction
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_construction_200_response'
          description: Successfully fetched construction site.
      security:
      - {}
      - AgentToken: []
      summary: Get Construction Site
      tags:
      - Systems
  /systems/{systemSymbol}/waypoints/{waypointSymbol}/construction/supply:
    post:
      description: |-
        Supply a construction site with the specified good. Requires a waypoint with a property of `isUnderConstruction` to be true.

        The good must be in your ship's cargo. The good will be removed from your ship's cargo and added to the construction site's materials.
      operationId: supply-construction
      parameters:
      - description: The system symbol
        explode: false
        in: path
        name: systemSymbol
        required: true
        schema:
          type: string
        style: simple
      - description: The waypoint symbol
        explode: false
        in: path
        name: waypointSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/supply_construction_request'
        description: ""
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supply_construction_201_response'
          description: Successfully supplied construction site.
      security:
      - AgentToken: []
      summary: Supply Construction Site
      tags:
      - Systems
  /factions:
    get:
      description: Return a paginated list of all the factions in the game.
      operationId: get-factions
      parameters:
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_factions_200_response'
          description: Succesfully fetched factions.
      security:
      - {}
      - AgentToken: []
      summary: List Factions
      tags:
      - Factions
  /factions/{factionSymbol}:
    get:
      description: View the details of a faction.
      operationId: get-faction
      parameters:
      - description: The faction symbol
        explode: false
        in: path
        name: factionSymbol
        required: true
        schema:
          example: COSMIC
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_faction_200_response'
          description: Successfully fetched a faction.
      summary: Get Faction
      tags:
      - Factions
  /my/agent:
    get:
      description: Fetch your agent's details.
      operationId: get-my-agent
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_my_agent_200_response'
          description: Successfully fetched agent details.
      security:
      - AgentToken: []
      summary: Get Agent
      tags:
      - Agents
  /agents:
    get:
      description: Fetch agents details.
      operationId: get-agents
      parameters:
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_agents_200_response'
          description: Successfully fetched agents details.
      security:
      - {}
      - AgentToken: []
      summary: List Agents
      tags:
      - Agents
  /agents/{agentSymbol}:
    get:
      description: Fetch agent details.
      operationId: get-agent
      parameters:
      - description: The agent symbol
        explode: false
        in: path
        name: agentSymbol
        required: true
        schema:
          default: FEBA66
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_my_agent_200_response'
          description: Successfully fetched agent details.
      security:
      - {}
      - AgentToken: []
      summary: Get Public Agent
      tags:
      - Agents
  /my/contracts:
    get:
      description: Return a paginated list of all your contracts.
      operationId: get-contracts
      parameters:
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_contracts_200_response'
          description: Succesfully listed contracts.
      security:
      - AgentToken: []
      summary: List Contracts
      tags:
      - Contracts
  /my/contracts/{contractId}:
    get:
      description: Get the details of a contract by ID.
      operationId: get-contract
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_contract_200_response'
          description: Successfully fetched contract.
      security:
      - AgentToken: []
      summary: Get Contract
      tags:
      - Contracts
  /my/contracts/{contractId}/accept:
    post:
      description: "Accept a contract by ID. \n\nYou can only accept contracts that\
        \ were offered to you, were not accepted yet, and whose deadlines has not\
        \ passed yet."
      operationId: accept-contract
      parameters:
      - description: The contract ID to accept.
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accept_contract_200_response'
          description: Succesfully accepted contract.
      security:
      - AgentToken: []
      summary: Accept Contract
      tags:
      - Contracts
  /my/contracts/{contractId}/deliver:
    post:
      description: |-
        Deliver cargo to a contract.

        In order to use this API, a ship must be at the delivery location (denoted in the delivery terms as `destinationSymbol` of a contract) and must have a number of units of a good required by this contract in its cargo.

        Cargo that was delivered will be removed from the ship's cargo.
      operationId: deliver-contract
      parameters:
      - description: The ID of the contract.
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliver_contract_request'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliver_contract_200_response'
          description: Successfully delivered cargo to contract.
      security:
      - AgentToken: []
      summary: Deliver Cargo to Contract
      tags:
      - Contracts
  /my/contracts/{contractId}/fulfill:
    post:
      description: Fulfill a contract. Can only be used on contracts that have all
        of their delivery terms fulfilled.
      operationId: fulfill-contract
      parameters:
      - description: The ID of the contract to fulfill.
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fulfill_contract_200_response'
          description: Successfully fulfilled a contract.
      security:
      - AgentToken: []
      summary: Fulfill Contract
      tags:
      - Contracts
  /my/ships:
    get:
      description: Return a paginated list of all of ships under your agent's ownership.
      operationId: get-my-ships
      parameters:
      - description: What entry offset to request
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: How many entries to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 20
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_my_ships_200_response'
          description: Succesfully listed ships.
      security:
      - AgentToken: []
      summary: List Ships
      tags:
      - Fleet
    post:
      description: |-
        Purchase a ship from a Shipyard. In order to use this function, a ship under your agent's ownership must be in a waypoint that has the `Shipyard` trait, and the Shipyard must sell the type of the desired ship.

        Shipyards typically offer ship types, which are predefined templates of ships that have dedicated roles. A template comes with a preset of an engine, a reactor, and a frame. It may also include a few modules and mounts.
      operationId: purchase-ship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchase_ship_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchase_ship_201_response'
          description: Purchased ship successfully.
      security:
      - AgentToken: []
      summary: Purchase Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}:
    get:
      description: Retrieve the details of a ship under your agent's ownership.
      operationId: get-my-ship
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_my_ship_200_response'
          description: Successfully fetched ship.
      security:
      - AgentToken: []
      summary: Get Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/cargo:
    get:
      description: Retrieve the cargo of a ship under your agent's ownership.
      operationId: get-my-ship-cargo
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_my_ship_cargo_200_response'
          description: Successfully fetched ship's cargo.
      security:
      - AgentToken: []
      summary: Get Ship Cargo
      tags:
      - Fleet
  /my/ships/{shipSymbol}/orbit:
    post:
      description: |-
        Attempt to move your ship into orbit at its current location. The request will only succeed if your ship is capable of moving into orbit at the time of the request.

        Orbiting ships are able to do actions that require the ship to be above surface such as navigating or extracting, but cannot access elements in their current waypoint, such as the market or a shipyard.

        The endpoint is idempotent - successive calls will succeed even if the ship is already in orbit.
      operationId: orbit-ship
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orbit_Ship_200_Response'
          description: The ship has successfully moved into orbit at its current location.
      security:
      - AgentToken: []
      summary: Orbit Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/refine:
    post:
      description: |-
        Attempt to refine the raw materials on your ship. The request will only succeed if your ship is capable of refining at the time of the request. In order to be able to refine, a ship must have goods that can be refined and have installed a `Refinery` module that can refine it.

        When refining, 30 basic goods will be converted into 10 processed goods.
      operationId: ship-refine
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ship_refine_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ship_Refine_201_Response'
          description: The ship has successfully refined goods.
      security:
      - AgentToken: []
      summary: Ship Refine
      tags:
      - Fleet
  /my/ships/{shipSymbol}/chart:
    post:
      description: |-
        Command a ship to chart the waypoint at its current location.

        Most waypoints in the universe are uncharted by default. These waypoints have their traits hidden until they have been charted by a ship.

        Charting a waypoint will record your agent as the one who created the chart, and all other agents would also be able to see the waypoint's traits.
      operationId: create-chart
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_chart_201_response'
          description: Created
      security:
      - AgentToken: []
      summary: Create Chart
      tags:
      - Fleet
  /my/ships/{shipSymbol}/cooldown:
    get:
      description: |-
        Retrieve the details of your ship's reactor cooldown. Some actions such as activating your jump drive, scanning, or extracting resources taxes your reactor and results in a cooldown.

        Your ship cannot perform additional actions until your cooldown has expired. The duration of your cooldown is relative to the power consumption of the related modules or mounts for the action taken.

        Response returns a 204 status code (no-content) when the ship has no cooldown.
      operationId: get-ship-cooldown
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ship_cooldown_200_response'
          description: Succesfully fetched ship's cooldown.
        "204":
          description: No cooldown.
      security:
      - AgentToken: []
      summary: Get Ship Cooldown
      tags:
      - Fleet
  /my/ships/{shipSymbol}/dock:
    post:
      description: |-
        Attempt to dock your ship at its current location. Docking will only succeed if your ship is capable of docking at the time of the request.

        Docked ships can access elements in their current location, such as the market or a shipyard, but cannot do actions that require the ship to be above surface such as navigating or extracting.

        The endpoint is idempotent - successive calls will succeed even if the ship is already docked.
      operationId: dock-ship
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dock_Ship_200_Response'
          description: The ship has successfully docked at its current location.
      security:
      - AgentToken: []
      summary: Dock Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/survey:
    post:
      description: |-
        Create surveys on a waypoint that can be extracted such as asteroid fields. A survey focuses on specific types of deposits from the extracted location. When ships extract using this survey, they are guaranteed to procure a high amount of one of the goods in the survey.

        In order to use a survey, send the entire survey details in the body of the extract request.

        Each survey may have multiple deposits, and if a symbol shows up more than once, that indicates a higher chance of extracting that resource.

        Your ship will enter a cooldown after surveying in which it is unable to perform certain actions. Surveys will eventually expire after a period of time or will be exhausted after being extracted several times based on the survey's size. Multiple ships can use the same survey for extraction.

        A ship must have the `Surveyor` mount installed in order to use this function.
      operationId: create-survey
      parameters:
      - description: The symbol of the ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_survey_201_response'
          description: Surveys has been created.
      security:
      - AgentToken: []
      summary: Create Survey
      tags:
      - Fleet
  /my/ships/{shipSymbol}/extract:
    post:
      description: |-
        Extract resources from a waypoint that can be extracted, such as asteroid fields, into your ship. Send an optional survey as the payload to target specific yields.

        The ship must be in orbit to be able to extract and must have mining equipments installed that can extract goods, such as the `Gas Siphon` mount for gas-based goods or `Mining Laser` mount for ore-based goods.

        The survey property is now deprecated. See the `extract/survey` endpoint for more details.
      operationId: extract-resources
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extract_resources_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extract_resources_201_response'
          description: Extracted successfully.
      security:
      - AgentToken: []
      summary: Extract Resources
      tags:
      - Fleet
  /my/ships/{shipSymbol}/siphon:
    post:
      description: |-
        Siphon gases, such as hydrocarbon, from gas giants.

        The ship must be in orbit to be able to siphon and must have siphon mounts and a gas processor installed.
      operationId: siphon-resources
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siphon_resources_201_response'
          description: Siphon successful.
      security:
      - AgentToken: []
      summary: Siphon Resources
      tags:
      - Fleet
  /my/ships/{shipSymbol}/extract/survey:
    post:
      description: |-
        Use a survey when extracting resources from a waypoint. This endpoint requires a survey as the payload, which allows your ship to extract specific yields.

        Send the full survey object as the payload which will be validated according to the signature. If the signature is invalid, or any properties of the survey are changed, the request will fail.
      operationId: extract-resources-with-survey
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extract_resources_201_response'
          description: Extracted successfully.
      security:
      - AgentToken: []
      summary: Extract Resources with Survey
      tags:
      - Fleet
  /my/ships/{shipSymbol}/jettison:
    post:
      description: Jettison cargo from your ship's cargo hold.
      operationId: jettison
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jettison_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jettison_200_response'
          description: Jettison successful.
      security:
      - AgentToken: []
      summary: Jettison Cargo
      tags:
      - Fleet
  /my/ships/{shipSymbol}/jump:
    post:
      description: |-
        Jump your ship instantly to a target connected waypoint. The ship must be in orbit to execute a jump.

        A unit of antimatter is purchased and consumed from the market when jumping. The price of antimatter is determined by the market and is subject to change. A ship can only jump to connected waypoints
      operationId: jump-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jump_ship_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jump_ship_200_response'
          description: Jump successful.
      security:
      - AgentToken: []
      summary: Jump Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/navigate:
    post:
      description: |-
        Navigate to a target destination. The ship must be in orbit to use this function. The destination waypoint must be within the same system as the ship's current location. Navigating will consume the necessary fuel from the ship's manifest based on the distance to the target waypoint.

        The returned response will detail the route information including the expected time of arrival. Most ship actions are unavailable until the ship has arrived at it's destination.

        To travel between systems, see the ship's Warp or Jump actions.
      operationId: navigate-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/navigate_ship_request'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/navigate_ship_200_response'
          description: The successful transit information including the route details
            and changes to ship fuel. The route includes the expected time of arrival.
      security:
      - AgentToken: []
      summary: Navigate Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/nav:
    get:
      description: Get the current nav status of a ship.
      operationId: get-ship-nav
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ship_nav_200_response'
          description: The current nav status of the ship.
      security:
      - AgentToken: []
      summary: Get Ship Nav
      tags:
      - Fleet
    patch:
      description: |-
        Update the nav configuration of a ship.

        Currently only supports configuring the Flight Mode of the ship, which affects its speed and fuel consumption.
      operationId: patch-ship-nav
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_ship_nav_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ship_nav_200_response'
          description: The updated nav data of the ship.
      security:
      - AgentToken: []
      summary: Patch Ship Nav
      tags:
      - Fleet
  /my/ships/{shipSymbol}/warp:
    post:
      description: |-
        Warp your ship to a target destination in another system. The ship must be in orbit to use this function and must have the `Warp Drive` module installed. Warping will consume the necessary fuel from the ship's manifest.

        The returned response will detail the route information including the expected time of arrival. Most ship actions are unavailable until the ship has arrived at its destination.
      operationId: warp-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/navigate_ship_request'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warp_ship_200_response'
          description: The successful transit information including the route details
            and changes to ship fuel. The route includes the expected time of arrival.
      security:
      - AgentToken: []
      summary: Warp Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/sell:
    post:
      description: Sell cargo in your ship to a market that trades this cargo. The
        ship must be docked in a waypoint that has the `Marketplace` trait in order
        to use this function.
      operationId: sell-cargo
      parameters:
      - description: Symbol of a ship.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellCargoRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sell_Cargo_201_Response'
          description: Cargo was successfully sold.
      security:
      - AgentToken: []
      summary: Sell Cargo
      tags:
      - Fleet
  /my/ships/{shipSymbol}/scan/systems:
    post:
      description: |-
        Scan for nearby systems, retrieving information on the systems' distance from the ship and their waypoints. Requires a ship to have the `Sensor Array` mount installed to use.

        The ship will enter a cooldown after using this function, during which it cannot execute certain actions.
      operationId: create-ship-system-scan
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_ship_system_scan_201_response'
          description: Successfully scanned for nearby systems.
      security:
      - AgentToken: []
      summary: Scan Systems
      tags:
      - Fleet
  /my/ships/{shipSymbol}/scan/waypoints:
    post:
      description: |-
        Scan for nearby waypoints, retrieving detailed information on each waypoint in range. Scanning uncharted waypoints will allow you to ignore their uncharted state and will list the waypoints' traits.

        Requires a ship to have the `Sensor Array` mount installed to use.

        The ship will enter a cooldown after using this function, during which it cannot execute certain actions.
      operationId: create-ship-waypoint-scan
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_ship_waypoint_scan_201_response'
          description: Successfully scanned for nearby waypoints.
      security:
      - AgentToken: []
      summary: Scan Waypoints
      tags:
      - Fleet
  /my/ships/{shipSymbol}/scan/ships:
    post:
      description: |-
        Scan for nearby ships, retrieving information for all ships in range.

        Requires a ship to have the `Sensor Array` mount installed to use.

        The ship will enter a cooldown after using this function, during which it cannot execute certain actions.
      operationId: create-ship-ship-scan
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_ship_ship_scan_201_response'
          description: Successfully scanned for nearby ships.
      security:
      - AgentToken: []
      summary: Scan Ships
      tags:
      - Fleet
  /my/ships/{shipSymbol}/refuel:
    post:
      description: |-
        Refuel your ship by buying fuel from the local market.

        Requires the ship to be docked in a waypoint that has the `Marketplace` trait, and the market must be selling fuel in order to refuel.

        Each fuel bought from the market replenishes 100 units in your ship's fuel.

        Ships will always be refuel to their frame's maximum fuel capacity when using this action.
      operationId: refuel-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refuel_ship_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refuel_ship_200_response'
          description: Refueled successfully.
      security:
      - AgentToken: []
      summary: Refuel Ship
      tags:
      - Fleet
  /my/ships/{shipSymbol}/purchase:
    post:
      description: |-
        Purchase cargo from a market.

        The ship must be docked in a waypoint that has `Marketplace` trait, and the market must be selling a good to be able to purchase it.

        The maximum amount of units of a good that can be purchased in each transaction are denoted by the `tradeVolume` value of the good, which can be viewed by using the Get Market action.

        Purchased goods are added to the ship's cargo hold.
      operationId: purchase-cargo
      parameters:
      - description: The ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase_Cargo_Request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase_Cargo_201_Response'
          description: Purchased goods successfully.
      security:
      - AgentToken: []
      summary: Purchase Cargo
      tags:
      - Fleet
  /my/ships/{shipSymbol}/transfer:
    post:
      description: |-
        Transfer cargo between ships.

        The receiving ship must be in the same waypoint as the transferring ship, and it must able to hold the additional cargo after the transfer is complete. Both ships also must be in the same state, either both are docked or both are orbiting.

        The response body's cargo shows the cargo of the transferring ship after the transfer is complete.
      operationId: transfer-cargo
      parameters:
      - description: The transferring ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer_Cargo_Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer_Cargo_200_Response'
          description: Transfer successful.
      security:
      - AgentToken: []
      summary: Transfer Cargo
      tags:
      - Fleet
  /my/ships/{shipSymbol}/negotiate/contract:
    post:
      description: "Negotiate a new contract with the HQ.\n\nIn order to negotiate\
        \ a new contract, an agent must not have ongoing or offered contracts over\
        \ the allowed maximum amount. Currently the maximum contracts an agent can\
        \ have at a time is 1.\n\nOnce a contract is negotiated, it is added to the\
        \ list of contracts offered to the agent, which the agent can then accept.\
        \ \n\nThe ship must be present at any waypoint with a faction present to negotiate\
        \ a contract with that faction."
      operationId: negotiateContract
      parameters:
      - description: The ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiate_Contract_200_Response'
          description: Successfully negotiated a new contract.
      security:
      - AgentToken: []
      summary: Negotiate Contract
      tags:
      - Fleet
  /my/ships/{shipSymbol}/mounts:
    get:
      description: Get the mounts installed on a ship.
      operationId: get-mounts
      parameters:
      - description: The ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Mounts_200_Response'
          description: Got installed mounts.
      security:
      - AgentToken: []
      summary: Get Mounts
      tags:
      - Fleet
  /my/ships/{shipSymbol}/mounts/install:
    post:
      description: "Install a mount on a ship.\n\nIn order to install a mount, the\
        \ ship must be docked and located in a waypoint that has a `Shipyard` trait.\
        \ The ship also must have the mount to install in its cargo hold.\n\nAn installation\
        \ fee will be deduced by the Shipyard for installing the mount on the ship. "
      operationId: install-mount
      parameters:
      - description: The ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Install_Mount_Request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Install_Mount_201_Response'
          description: Successfully installed the mount.
      security:
      - AgentToken: []
      summary: Install Mount
      tags:
      - Fleet
  /my/ships/{shipSymbol}/mounts/remove:
    post:
      description: |-
        Remove a mount from a ship.

        The ship must be docked in a waypoint that has the `Shipyard` trait, and must have the desired mount that it wish to remove installed.

        A removal fee will be deduced from the agent by the Shipyard.
      operationId: remove-mount
      parameters:
      - description: The ship's symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remove_Mount_Request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remove_Mount_201_Response'
          description: Successfully removed the mount.
      security:
      - AgentToken: []
      summary: Remove Mount
      tags:
      - Fleet
  /my/ships/{shipSymbol}/scrap:
    get:
      description: Get the amount of value that will be returned when scrapping a
        ship.
      operationId: get-scrap-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_scrap_ship_200_response'
          description: Successfully retrieved the amount of value that will be returned
            when scrapping a ship.
      security:
      - AgentToken: []
      summary: Get Scrap Ship
      tags:
      - Fleet
      x-preview-feature: true
    post:
      description: "Scrap a ship, removing it from the game and returning a portion\
        \ of the ship's value to the agent. The ship must be docked in a waypoint\
        \ that has the `Shipyard` trait in order to use this function. To preview\
        \ the amount of value that will be returned, use the Get Ship action."
      operationId: scrap-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scrap_ship_200_response'
          description: Ship scrapped successfully.
      security:
      - AgentToken: []
      summary: Scrap Ship
      tags:
      - Fleet
      x-preview-feature: true
  /my/ships/{shipSymbol}/repair:
    get:
      description: Get the cost of repairing a ship.
      operationId: get-repair-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_repair_ship_200_response'
          description: Successfully retrieved the cost of repairing a ship.
      security:
      - AgentToken: []
      summary: Get Repair Ship
      tags:
      - Fleet
      x-preview-feature: true
    post:
      description: "Repair a ship, restoring the ship to maximum condition. The ship\
        \ must be docked at a waypoint that has the `Shipyard` trait in order to use\
        \ this function. To preview the cost of repairing the ship, use the Get action."
      operationId: repair-ship
      parameters:
      - description: The ship symbol.
        explode: false
        in: path
        name: shipSymbol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repair_ship_200_response'
          description: Ship repaired successfully.
      security:
      - AgentToken: []
      summary: Repair Ship
      tags:
      - Fleet
      x-preview-feature: true
components:
  requestBodies: {}
  schemas:
    ActivityLevel:
      description: "The activity level of a trade good. If the good is an import,\
        \ this represents how strong consumption is. If the good is an export, this\
        \ represents how strong the production is for the good. When activity is strong,\
        \ consumption or production is near maximum capacity. When activity is weak,\
        \ consumption or production is near minimum capacity."
      enum:
      - WEAK
      - GROWING
      - STRONG
      - RESTRICTED
      type: string
      x-enumDescriptions:
        WEAK: Indicates very low production or consumption activity. This may suggest
          a surplus in supply or a lack of demand.
        GROWING: "Represents increasing activity in production or consumption, suggesting\
          \ a developing market."
        STRONG: Signifies high levels of production or consumption. Indicates a healthy
          and active market with high demand or supply.
        RESTRICTED: "Reflects a bottleneck in production or consumption, possibly\
          \ due to a lack of supply or demand in related goods."
    Agent:
      description: Agent details.
      example:
        accountId: accountId
        symbol: symbol
        headquarters: headquarters
        credits: 0
        startingFaction: startingFaction
        shipCount: 6
      properties:
        accountId:
          description: Account ID that is tied to this agent. Only included on your
            own agent.
          minLength: 1
          type: string
        symbol:
          description: Symbol of the agent.
          maxLength: 14
          minLength: 3
          type: string
        headquarters:
          description: The headquarters of the agent.
          minLength: 1
          type: string
        credits:
          description: The number of credits the agent has available. Credits can
            be negative if funds have been overdrawn.
          format: int64
          type: integer
        startingFaction:
          description: The faction the agent started with.
          minLength: 1
          type: string
        shipCount:
          description: How many ships are owned by the agent.
          type: integer
      required:
      - credits
      - headquarters
      - shipCount
      - startingFaction
      - symbol
      type: object
    Chart:
      description: "The chart of a system or waypoint, which makes the location visible\
        \ to other agents."
      example:
        submittedBy: submittedBy
        waypointSymbol: waypointSymbol
        submittedOn: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        submittedBy:
          description: The agent that submitted the chart for this waypoint.
          type: string
        submittedOn:
          description: The time the chart for this waypoint was submitted.
          format: date-time
          type: string
      type: object
    Construction:
      description: The construction details of a waypoint.
      example:
        symbol: symbol
        materials:
        - tradeSymbol: null
          fulfilled: 6
          required: 0
        - tradeSymbol: null
          fulfilled: 6
          required: 0
        isComplete: true
      properties:
        symbol:
          description: The symbol of the waypoint.
          type: string
        materials:
          description: The materials required to construct the waypoint.
          items:
            $ref: '#/components/schemas/ConstructionMaterial'
          type: array
        isComplete:
          description: Whether the waypoint has been constructed.
          type: boolean
      required:
      - isComplete
      - materials
      - symbol
      type: object
    ConstructionMaterial:
      description: The details of the required construction materials for a given
        waypoint under construction.
      example:
        tradeSymbol: null
        fulfilled: 6
        required: 0
      properties:
        tradeSymbol:
          $ref: '#/components/schemas/TradeSymbol'
        required:
          description: The number of units required.
          type: integer
        fulfilled:
          description: The number of units fulfilled toward the required amount.
          type: integer
      required:
      - fulfilled
      - required
      - tradeSymbol
      type: object
    Contract:
      description: Contract details.
      example:
        terms:
          deliver:
          - tradeSymbol: tradeSymbol
            unitsRequired: 5
            destinationSymbol: destinationSymbol
            unitsFulfilled: 2
          - tradeSymbol: tradeSymbol
            unitsRequired: 5
            destinationSymbol: destinationSymbol
            unitsFulfilled: 2
          payment:
            onFulfilled: 5
            onAccepted: 1
          deadline: 2000-01-23T04:56:07.000+00:00
        factionSymbol: factionSymbol
        fulfilled: false
        accepted: false
        expiration: 2000-01-23T04:56:07.000+00:00
        id: id
        type: PROCUREMENT
        deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: ID of the contract.
          minLength: 1
          type: string
        factionSymbol:
          description: The symbol of the faction that this contract is for.
          minLength: 1
          type: string
        type:
          description: Type of contract.
          enum:
          - PROCUREMENT
          - TRANSPORT
          - SHUTTLE
          type: string
        terms:
          $ref: '#/components/schemas/ContractTerms'
        accepted:
          default: false
          description: Whether the contract has been accepted by the agent
          type: boolean
        fulfilled:
          default: false
          description: Whether the contract has been fulfilled
          type: boolean
        expiration:
          deprecated: true
          description: Deprecated in favor of deadlineToAccept
          format: date-time
          type: string
        deadlineToAccept:
          description: The time at which the contract is no longer available to be
            accepted
          format: date-time
          type: string
      required:
      - accepted
      - expiration
      - factionSymbol
      - fulfilled
      - id
      - terms
      - type
      type: object
    ContractDeliverGood:
      description: "The details of a delivery contract. Includes the type of good,\
        \ units needed, and the destination."
      example:
        tradeSymbol: tradeSymbol
        unitsRequired: 5
        destinationSymbol: destinationSymbol
        unitsFulfilled: 2
      properties:
        tradeSymbol:
          description: The symbol of the trade good to deliver.
          minLength: 1
          type: string
        destinationSymbol:
          description: The destination where goods need to be delivered.
          minLength: 1
          type: string
        unitsRequired:
          description: The number of units that need to be delivered on this contract.
          type: integer
        unitsFulfilled:
          description: The number of units fulfilled on this contract.
          type: integer
      required:
      - destinationSymbol
      - tradeSymbol
      - unitsFulfilled
      - unitsRequired
      type: object
    ContractPayment:
      description: Payments for the contract.
      example:
        onFulfilled: 5
        onAccepted: 1
      properties:
        onAccepted:
          description: The amount of credits received up front for accepting the contract.
          type: integer
        onFulfilled:
          description: The amount of credits received when the contract is fulfilled.
          type: integer
      required:
      - onAccepted
      - onFulfilled
      type: object
    ContractTerms:
      description: The terms to fulfill the contract.
      example:
        deliver:
        - tradeSymbol: tradeSymbol
          unitsRequired: 5
          destinationSymbol: destinationSymbol
          unitsFulfilled: 2
        - tradeSymbol: tradeSymbol
          unitsRequired: 5
          destinationSymbol: destinationSymbol
          unitsFulfilled: 2
        payment:
          onFulfilled: 5
          onAccepted: 1
        deadline: 2000-01-23T04:56:07.000+00:00
      properties:
        deadline:
          description: The deadline for the contract.
          format: date-time
          type: string
        payment:
          $ref: '#/components/schemas/ContractPayment'
        deliver:
          description: The cargo that needs to be delivered to fulfill the contract.
          items:
            $ref: '#/components/schemas/ContractDeliverGood'
          type: array
      required:
      - deadline
      - payment
      type: object
    Cooldown:
      description: A cooldown is a period of time in which a ship cannot perform certain
        actions.
      example:
        remainingSeconds: 0
        totalSeconds: 0
        shipSymbol: shipSymbol
        expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        shipSymbol:
          description: The symbol of the ship that is on cooldown
          minLength: 1
          type: string
        totalSeconds:
          description: The total duration of the cooldown in seconds
          minimum: 0
          type: integer
        remainingSeconds:
          description: The remaining duration of the cooldown in seconds
          minimum: 0
          type: integer
        expiration:
          description: The date and time when the cooldown expires in ISO 8601 format
          format: date-time
          type: string
      required:
      - remainingSeconds
      - shipSymbol
      - totalSeconds
      type: object
    Extraction:
      description: Extraction details.
      example:
        yield:
          symbol: null
          units: 0
        shipSymbol: shipSymbol
      properties:
        shipSymbol:
          description: Symbol of the ship that executed the extraction.
          minLength: 1
          type: string
        yield:
          $ref: '#/components/schemas/ExtractionYield'
      required:
      - shipSymbol
      - yield
      type: object
    ExtractionYield:
      description: A yield from the extraction operation.
      example:
        symbol: null
        units: 0
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: The number of units extracted that were placed into the ship's
            cargo hold.
          type: integer
      required:
      - symbol
      - units
      type: object
    Faction:
      description: Faction details.
      example:
        isRecruiting: true
        symbol: null
        headquarters: headquarters
        traits:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        name: name
        description: description
      properties:
        symbol:
          $ref: '#/components/schemas/FactionSymbol'
        name:
          description: Name of the faction.
          minLength: 1
          type: string
        description:
          description: Description of the faction.
          minLength: 1
          type: string
        headquarters:
          description: The waypoint in which the faction's HQ is located in.
          minLength: 1
          type: string
        traits:
          description: List of traits that define this faction.
          items:
            $ref: '#/components/schemas/FactionTrait'
          type: array
        isRecruiting:
          description: Whether or not the faction is currently recruiting new agents.
          type: boolean
      required:
      - description
      - headquarters
      - isRecruiting
      - name
      - symbol
      - traits
      type: object
    FactionSymbol:
      description: The symbol of the faction.
      enum:
      - COSMIC
      - VOID
      - GALACTIC
      - QUANTUM
      - DOMINION
      - ASTRO
      - CORSAIRS
      - OBSIDIAN
      - AEGIS
      - UNITED
      - SOLITARY
      - COBALT
      - OMEGA
      - ECHO
      - LORDS
      - CULT
      - ANCIENTS
      - SHADOW
      - ETHEREAL
      minLength: 1
      type: string
    FactionTrait:
      example:
        symbol: null
        name: name
        description: description
      properties:
        symbol:
          $ref: '#/components/schemas/FactionTraitSymbol'
        name:
          description: The name of the trait.
          type: string
        description:
          description: A description of the trait.
          type: string
      required:
      - description
      - name
      - symbol
      type: object
    FactionTraitSymbol:
      description: The unique identifier of the trait.
      enum:
      - BUREAUCRATIC
      - SECRETIVE
      - CAPITALISTIC
      - INDUSTRIOUS
      - PEACEFUL
      - DISTRUSTFUL
      - WELCOMING
      - SMUGGLERS
      - SCAVENGERS
      - REBELLIOUS
      - EXILES
      - PIRATES
      - RAIDERS
      - CLAN
      - GUILD
      - DOMINION
      - FRINGE
      - FORSAKEN
      - ISOLATED
      - LOCALIZED
      - ESTABLISHED
      - NOTABLE
      - DOMINANT
      - INESCAPABLE
      - INNOVATIVE
      - BOLD
      - VISIONARY
      - CURIOUS
      - DARING
      - EXPLORATORY
      - RESOURCEFUL
      - FLEXIBLE
      - COOPERATIVE
      - UNITED
      - STRATEGIC
      - INTELLIGENT
      - RESEARCH_FOCUSED
      - COLLABORATIVE
      - PROGRESSIVE
      - MILITARISTIC
      - TECHNOLOGICALLY_ADVANCED
      - AGGRESSIVE
      - IMPERIALISTIC
      - TREASURE_HUNTERS
      - DEXTEROUS
      - UNPREDICTABLE
      - BRUTAL
      - FLEETING
      - ADAPTABLE
      - SELF_SUFFICIENT
      - DEFENSIVE
      - PROUD
      - DIVERSE
      - INDEPENDENT
      - SELF_INTERESTED
      - FRAGMENTED
      - COMMERCIAL
      - FREE_MARKETS
      - ENTREPRENEURIAL
      type: string
    JumpGate:
      description: ""
      example:
        symbol: symbol
        connections:
        - connections
        - connections
      properties:
        symbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        connections:
          description: All the gates that are connected to this waypoint.
          items:
            description: The symbol of the waypoint that has a corresponding gate.
            type: string
          type: array
      required:
      - connections
      - symbol
      type: object
    Market:
      description: ""
      example:
        symbol: symbol
        imports:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        tradeGoods:
        - tradeVolume: 1
          symbol: null
          activity: null
          sellPrice: 0
          purchasePrice: 0
          type: EXPORT
          supply: null
        - tradeVolume: 1
          symbol: null
          activity: null
          sellPrice: 0
          purchasePrice: 0
          type: EXPORT
          supply: null
        exports:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        exchange:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        transactions:
        - tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          units: 0
          type: PURCHASE
          pricePerUnit: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
        - tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          units: 0
          type: PURCHASE
          pricePerUnit: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        symbol:
          description: The symbol of the market. The symbol is the same as the waypoint
            where the market is located.
          type: string
        exports:
          description: The list of goods that are exported from this market.
          items:
            $ref: '#/components/schemas/TradeGood'
          type: array
        imports:
          description: The list of goods that are sought as imports in this market.
          items:
            $ref: '#/components/schemas/TradeGood'
          type: array
        exchange:
          description: The list of goods that are bought and sold between agents at
            this market.
          items:
            $ref: '#/components/schemas/TradeGood'
          type: array
        transactions:
          description: The list of recent transactions at this market. Visible only
            when a ship is present at the market.
          items:
            $ref: '#/components/schemas/MarketTransaction'
          type: array
        tradeGoods:
          description: The list of goods that are traded at this market. Visible only
            when a ship is present at the market.
          items:
            $ref: '#/components/schemas/MarketTradeGood'
          type: array
      required:
      - exchange
      - exports
      - imports
      - symbol
      type: object
    MarketTradeGood:
      example:
        tradeVolume: 1
        symbol: null
        activity: null
        sellPrice: 0
        purchasePrice: 0
        type: EXPORT
        supply: null
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        type:
          description: "The type of trade good (export, import, or exchange)."
          enum:
          - EXPORT
          - IMPORT
          - EXCHANGE
          type: string
        tradeVolume:
          description: "This is the maximum number of units that can be purchased\
            \ or sold at this market in a single trade for this good. Trade volume\
            \ also gives an indication of price volatility. A market with a low trade\
            \ volume will have large price swings, while high trade volume will be\
            \ more resilient to price changes."
          minimum: 1
          type: integer
        supply:
          $ref: '#/components/schemas/SupplyLevel'
        activity:
          $ref: '#/components/schemas/ActivityLevel'
        purchasePrice:
          description: The price at which this good can be purchased from the market.
          minimum: 0
          type: integer
        sellPrice:
          description: The price at which this good can be sold to the market.
          minimum: 0
          type: integer
      required:
      - purchasePrice
      - sellPrice
      - supply
      - symbol
      - tradeVolume
      - type
      type: object
    MarketTransaction:
      description: Result of a transaction with a market.
      example:
        tradeSymbol: tradeSymbol
        totalPrice: 0
        waypointSymbol: waypointSymbol
        shipSymbol: shipSymbol
        units: 0
        type: PURCHASE
        pricePerUnit: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        shipSymbol:
          description: The symbol of the ship that made the transaction.
          type: string
        tradeSymbol:
          description: The symbol of the trade good.
          type: string
        type:
          description: The type of transaction.
          enum:
          - PURCHASE
          - SELL
          type: string
        units:
          description: The number of units of the transaction.
          minimum: 0
          type: integer
        pricePerUnit:
          description: The price per unit of the transaction.
          minimum: 0
          type: integer
        totalPrice:
          description: The total price of the transaction.
          minimum: 0
          type: integer
        timestamp:
          description: The timestamp of the transaction.
          format: date-time
          type: string
      required:
      - pricePerUnit
      - shipSymbol
      - timestamp
      - totalPrice
      - tradeSymbol
      - type
      - units
      - waypointSymbol
      type: object
    Meta:
      description: Meta details for pagination.
      example:
        total: 0
        limit: 14
        page: 1
      properties:
        total:
          description: Shows the total amount of items of this kind that exist.
          minimum: 0
          type: integer
        page:
          default: 1
          description: "A page denotes an amount of items, offset from the first item.\
            \ Each page holds an amount of items equal to the `limit`."
          minimum: 1
          type: integer
        limit:
          default: 10
          description: The amount of items in each page. Limits how many items can
            be fetched at once.
          maximum: 20
          minimum: 1
          type: integer
      required:
      - limit
      - page
      - total
      type: object
      x-examples:
        example-1:
          total: 6
          page: 1
          limit: 20
    RepairTransaction:
      description: Result of a repair transaction.
      example:
        totalPrice: 0
        waypointSymbol: waypointSymbol
        shipSymbol: shipSymbol
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        shipSymbol:
          description: The symbol of the ship.
          type: string
        totalPrice:
          description: The total price of the transaction.
          minimum: 0
          type: integer
        timestamp:
          description: The timestamp of the transaction.
          format: date-time
          type: string
      required:
      - shipSymbol
      - timestamp
      - totalPrice
      - waypointSymbol
      type: object
    ScannedShip:
      description: The ship that was scanned. Details include information about the
        ship that could be detected by the scanner.
      example:
        symbol: symbol
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
        engine:
          symbol: symbol
        reactor:
          symbol: symbol
        mounts:
        - symbol: symbol
        - symbol: symbol
        registration:
          role: null
          name: name
          factionSymbol: factionSymbol
        frame:
          symbol: symbol
      properties:
        symbol:
          description: The globally unique identifier of the ship.
          type: string
        registration:
          $ref: '#/components/schemas/ShipRegistration'
        nav:
          $ref: '#/components/schemas/ShipNav'
        frame:
          $ref: '#/components/schemas/ScannedShip_frame'
        reactor:
          $ref: '#/components/schemas/ScannedShip_reactor'
        engine:
          $ref: '#/components/schemas/ScannedShip_engine'
        mounts:
          description: List of mounts installed in the ship.
          items:
            $ref: '#/components/schemas/ScannedShip_mounts_inner'
          type: array
      required:
      - engine
      - nav
      - registration
      - symbol
      type: object
    ScannedSystem:
      description: Details of a system was that scanned.
      example:
        symbol: symbol
        distance: 1
        sectorSymbol: sectorSymbol
        x: 0
        "y": 6
        type: null
      properties:
        symbol:
          description: Symbol of the system.
          minLength: 1
          type: string
        sectorSymbol:
          description: Symbol of the system's sector.
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/SystemType'
        x:
          description: Position in the universe in the x axis.
          type: integer
        "y":
          description: Position in the universe in the y axis.
          type: integer
        distance:
          description: The system's distance from the scanning ship.
          type: integer
      required:
      - distance
      - sectorSymbol
      - symbol
      - type
      - x
      - "y"
      type: object
    ScannedWaypoint:
      description: A waypoint that was scanned by a ship.
      example:
        symbol: symbol
        traits:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        systemSymbol: systemSymbol
        faction:
          symbol: null
        x: 0
        "y": 6
        type: null
        chart:
          submittedBy: submittedBy
          waypointSymbol: waypointSymbol
          submittedOn: 2000-01-23T04:56:07.000+00:00
        orbitals:
        - symbol: symbol
        - symbol: symbol
      properties:
        symbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        type:
          $ref: '#/components/schemas/WaypointType'
        systemSymbol:
          description: The symbol of the system.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}"
        x:
          description: Position in the universe in the x axis.
          type: integer
        "y":
          description: Position in the universe in the y axis.
          type: integer
        orbitals:
          description: List of waypoints that orbit this waypoint.
          items:
            $ref: '#/components/schemas/WaypointOrbital'
          type: array
        faction:
          $ref: '#/components/schemas/WaypointFaction'
        traits:
          description: The traits of the waypoint.
          items:
            $ref: '#/components/schemas/WaypointTrait'
          type: array
        chart:
          $ref: '#/components/schemas/Chart'
      required:
      - orbitals
      - symbol
      - systemSymbol
      - traits
      - type
      - x
      - "y"
      type: object
    ScrapTransaction:
      description: Result of a scrap transaction.
      example:
        totalPrice: 0
        waypointSymbol: waypointSymbol
        shipSymbol: shipSymbol
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        shipSymbol:
          description: The symbol of the ship.
          type: string
        totalPrice:
          description: The total price of the transaction.
          minimum: 0
          type: integer
        timestamp:
          description: The timestamp of the transaction.
          format: date-time
          type: string
      required:
      - shipSymbol
      - timestamp
      - totalPrice
      - waypointSymbol
      type: object
    Ship:
      description: Ship details.
      example:
        symbol: symbol
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
        engine:
          symbol: ENGINE_IMPULSE_DRIVE_I
          condition: 0.9018348186070783
          integrity: 0.6438423552598547
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          description: description
          speed: 1
        fuel:
          consumed:
            amount: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
          current: 0
          capacity: 0
        reactor:
          symbol: REACTOR_SOLAR_I
          condition: 0.9369310271410669
          integrity: 0.6683562403749608
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          description: description
          powerOutput: 1
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        mounts:
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        registration:
          role: null
          name: name
          factionSymbol: factionSymbol
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        modules:
        - symbol: MODULE_MINERAL_PROCESSOR_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          range: 0
          description: description
          capacity: 0
        - symbol: MODULE_MINERAL_PROCESSOR_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          range: 0
          description: description
          capacity: 0
        crew:
          wages: 0
          current: 3
          rotation: STRICT
          morale: 73
          required: 2
          capacity: 4
        frame:
          symbol: FRAME_PROBE
          condition: 0.10246457001441578
          integrity: 0.14894159098541704
          moduleSlots: 0
          requirements:
            slots: 9
            power: 4
            crew: 5
          fuelCapacity: 0
          name: name
          description: description
          mountingPoints: 0
      properties:
        symbol:
          description: "The globally unique identifier of the ship in the following\
            \ format: `[AGENT_SYMBOL]-[HEX_ID]`"
          type: string
        registration:
          $ref: '#/components/schemas/ShipRegistration'
        nav:
          $ref: '#/components/schemas/ShipNav'
        crew:
          $ref: '#/components/schemas/ShipCrew'
        frame:
          $ref: '#/components/schemas/ShipFrame'
        reactor:
          $ref: '#/components/schemas/ShipReactor'
        engine:
          $ref: '#/components/schemas/ShipEngine'
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        modules:
          description: Modules installed in this ship.
          items:
            $ref: '#/components/schemas/ShipModule'
          type: array
        mounts:
          description: Mounts installed in this ship.
          items:
            $ref: '#/components/schemas/ShipMount'
          type: array
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        fuel:
          $ref: '#/components/schemas/ShipFuel'
      required:
      - cargo
      - cooldown
      - crew
      - engine
      - frame
      - fuel
      - modules
      - mounts
      - nav
      - reactor
      - registration
      - symbol
      type: object
    ShipCargo:
      description: Ship cargo details.
      example:
        units: 0
        inventory:
        - symbol: null
          name: name
          description: description
          units: 1
        - symbol: null
          name: name
          description: description
          units: 1
        capacity: 0
      properties:
        capacity:
          description: The max number of items that can be stored in the cargo hold.
          minimum: 0
          type: integer
        units:
          description: The number of items currently stored in the cargo hold.
          minimum: 0
          type: integer
        inventory:
          description: The items currently in the cargo hold.
          items:
            $ref: '#/components/schemas/ShipCargoItem'
          type: array
      required:
      - capacity
      - inventory
      - units
      type: object
    ShipCargoItem:
      description: The type of cargo item and the number of units.
      example:
        symbol: null
        name: name
        description: description
        units: 1
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        name:
          description: The name of the cargo item type.
          type: string
        description:
          description: The description of the cargo item type.
          type: string
        units:
          description: The number of units of the cargo item.
          minimum: 1
          type: integer
      required:
      - description
      - name
      - symbol
      - units
      type: object
    ShipComponentCondition:
      description: "The repairable condition of a component. A value of 0 indicates\
        \ the component needs significant repairs, while a value of 1 indicates the\
        \ component is in near perfect condition. As the condition of a component\
        \ is repaired, the overall integrity of the component decreases."
      format: double
      maximum: 1
      minimum: 0
      type: number
    ShipComponentIntegrity:
      description: "The overall integrity of the component, which determines the performance\
        \ of the component. A value of 0 indicates that the component is almost completely\
        \ degraded, while a value of 1 indicates that the component is in near perfect\
        \ condition. The integrity of the component is non-repairable, and represents\
        \ permanent wear over time."
      format: double
      maximum: 1
      minimum: 0
      type: number
    ShipConditionEvent:
      description: "An event that represents damage or wear to a ship's reactor, frame,\
        \ or engine, reducing the condition of the ship."
      example:
        symbol: REACTOR_OVERLOAD
        component: FRAME
        name: name
        description: description
      properties:
        symbol:
          enum:
          - REACTOR_OVERLOAD
          - ENERGY_SPIKE_FROM_MINERAL
          - SOLAR_FLARE_INTERFERENCE
          - COOLANT_LEAK
          - POWER_DISTRIBUTION_FLUCTUATION
          - MAGNETIC_FIELD_DISRUPTION
          - HULL_MICROMETEORITE_STRIKES
          - STRUCTURAL_STRESS_FRACTURES
          - CORROSIVE_MINERAL_CONTAMINATION
          - THERMAL_EXPANSION_MISMATCH
          - VIBRATION_DAMAGE_FROM_DRILLING
          - ELECTROMAGNETIC_FIELD_INTERFERENCE
          - IMPACT_WITH_EXTRACTED_DEBRIS
          - FUEL_EFFICIENCY_DEGRADATION
          - COOLANT_SYSTEM_AGEING
          - DUST_MICROABRASIONS
          - THRUSTER_NOZZLE_WEAR
          - EXHAUST_PORT_CLOGGING
          - BEARING_LUBRICATION_FADE
          - SENSOR_CALIBRATION_DRIFT
          - HULL_MICROMETEORITE_DAMAGE
          - SPACE_DEBRIS_COLLISION
          - THERMAL_STRESS
          - VIBRATION_OVERLOAD
          - PRESSURE_DIFFERENTIAL_STRESS
          - ELECTROMAGNETIC_SURGE_EFFECTS
          - ATMOSPHERIC_ENTRY_HEAT
          type: string
        component:
          enum:
          - FRAME
          - REACTOR
          - ENGINE
          type: string
        name:
          description: The name of the event.
          type: string
        description:
          description: A description of the event.
          type: string
      required:
      - component
      - description
      - name
      - symbol
      type: object
    ShipCrew:
      description: The ship's crew service and maintain the ship's systems and equipment.
      example:
        wages: 0
        current: 3
        rotation: STRICT
        morale: 73
        required: 2
        capacity: 4
      properties:
        current:
          description: The current number of crew members on the ship.
          type: integer
        required:
          description: The minimum number of crew members required to maintain the
            ship.
          type: integer
        capacity:
          description: The maximum number of crew members the ship can support.
          type: integer
        rotation:
          default: STRICT
          description: The rotation of crew shifts. A stricter shift improves the
            ship's performance. A more relaxed shift improves the crew's morale.
          enum:
          - STRICT
          - RELAXED
          type: string
        morale:
          description: A rough measure of the crew's morale. A higher morale means
            the crew is happier and more productive. A lower morale means the ship
            is more prone to accidents.
          maximum: 100
          minimum: 0
          type: integer
        wages:
          description: The amount of credits per crew member paid per hour. Wages
            are paid when a ship docks at a civilized waypoint.
          minimum: 0
          type: integer
      required:
      - capacity
      - current
      - morale
      - required
      - rotation
      - wages
      type: object
    ShipEngine:
      description: The engine determines how quickly a ship travels between waypoints.
      example:
        symbol: ENGINE_IMPULSE_DRIVE_I
        condition: 0.9018348186070783
        integrity: 0.6438423552598547
        requirements:
          slots: 9
          power: 4
          crew: 5
        name: name
        description: description
        speed: 1
      properties:
        symbol:
          description: The symbol of the engine.
          enum:
          - ENGINE_IMPULSE_DRIVE_I
          - ENGINE_ION_DRIVE_I
          - ENGINE_ION_DRIVE_II
          - ENGINE_HYPER_DRIVE_I
          type: string
        name:
          description: The name of the engine.
          type: string
        description:
          description: The description of the engine.
          type: string
        condition:
          description: "The repairable condition of a component. A value of 0 indicates\
            \ the component needs significant repairs, while a value of 1 indicates\
            \ the component is in near perfect condition. As the condition of a component\
            \ is repaired, the overall integrity of the component decreases."
          format: double
          maximum: 1
          minimum: 0
          type: number
        integrity:
          description: "The overall integrity of the component, which determines the\
            \ performance of the component. A value of 0 indicates that the component\
            \ is almost completely degraded, while a value of 1 indicates that the\
            \ component is in near perfect condition. The integrity of the component\
            \ is non-repairable, and represents permanent wear over time."
          format: double
          maximum: 1
          minimum: 0
          type: number
        speed:
          description: "The speed stat of this engine. The higher the speed, the faster\
            \ a ship can travel from one point to another. Reduces the time of arrival\
            \ when navigating the ship."
          minimum: 1
          type: integer
        requirements:
          $ref: '#/components/schemas/ShipRequirements'
      required:
      - condition
      - description
      - integrity
      - name
      - requirements
      - speed
      - symbol
      type: object
    ShipFrame:
      description: "The frame of the ship. The frame determines the number of modules\
        \ and mounting points of the ship, as well as base fuel capacity. As the condition\
        \ of the frame takes more wear, the ship will become more sluggish and less\
        \ maneuverable."
      example:
        symbol: FRAME_PROBE
        condition: 0.10246457001441578
        integrity: 0.14894159098541704
        moduleSlots: 0
        requirements:
          slots: 9
          power: 4
          crew: 5
        fuelCapacity: 0
        name: name
        description: description
        mountingPoints: 0
      properties:
        symbol:
          description: Symbol of the frame.
          enum:
          - FRAME_PROBE
          - FRAME_DRONE
          - FRAME_INTERCEPTOR
          - FRAME_RACER
          - FRAME_FIGHTER
          - FRAME_FRIGATE
          - FRAME_SHUTTLE
          - FRAME_EXPLORER
          - FRAME_MINER
          - FRAME_LIGHT_FREIGHTER
          - FRAME_HEAVY_FREIGHTER
          - FRAME_TRANSPORT
          - FRAME_DESTROYER
          - FRAME_CRUISER
          - FRAME_CARRIER
          type: string
        name:
          description: Name of the frame.
          type: string
        description:
          description: Description of the frame.
          type: string
        condition:
          description: "The repairable condition of a component. A value of 0 indicates\
            \ the component needs significant repairs, while a value of 1 indicates\
            \ the component is in near perfect condition. As the condition of a component\
            \ is repaired, the overall integrity of the component decreases."
          format: double
          maximum: 1
          minimum: 0
          type: number
        integrity:
          description: "The overall integrity of the component, which determines the\
            \ performance of the component. A value of 0 indicates that the component\
            \ is almost completely degraded, while a value of 1 indicates that the\
            \ component is in near perfect condition. The integrity of the component\
            \ is non-repairable, and represents permanent wear over time."
          format: double
          maximum: 1
          minimum: 0
          type: number
        moduleSlots:
          description: "The amount of slots that can be dedicated to modules installed\
            \ in the ship. Each installed module take up a number of slots, and once\
            \ there are no more slots, no new modules can be installed."
          minimum: 0
          type: integer
        mountingPoints:
          description: "The amount of slots that can be dedicated to mounts installed\
            \ in the ship. Each installed mount takes up a number of points, and once\
            \ there are no more points remaining, no new mounts can be installed."
          minimum: 0
          type: integer
        fuelCapacity:
          description: "The maximum amount of fuel that can be stored in this ship.\
            \ When refueling, the ship will be refueled to this amount."
          minimum: 0
          type: integer
        requirements:
          $ref: '#/components/schemas/ShipRequirements'
      required:
      - condition
      - description
      - fuelCapacity
      - integrity
      - moduleSlots
      - mountingPoints
      - name
      - requirements
      - symbol
      type: object
    ShipFuel:
      description: Details of the ship's fuel tanks including how much fuel was consumed
        during the last transit or action.
      example:
        consumed:
          amount: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
        current: 0
        capacity: 0
      properties:
        current:
          description: The current amount of fuel in the ship's tanks.
          minimum: 0
          type: integer
        capacity:
          description: The maximum amount of fuel the ship's tanks can hold.
          minimum: 0
          type: integer
        consumed:
          $ref: '#/components/schemas/ShipFuel_consumed'
      required:
      - capacity
      - current
      type: object
    ShipModificationTransaction:
      description: "Result of a transaction for a ship modification, such as installing\
        \ a mount or a module."
      example:
        tradeSymbol: tradeSymbol
        totalPrice: 0
        waypointSymbol: waypointSymbol
        shipSymbol: shipSymbol
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint where the transaction took place.
          type: string
        shipSymbol:
          description: The symbol of the ship that made the transaction.
          type: string
        tradeSymbol:
          description: The symbol of the trade good.
          type: string
        totalPrice:
          description: The total price of the transaction.
          minimum: 0
          type: integer
        timestamp:
          description: The timestamp of the transaction.
          format: date-time
          type: string
      required:
      - shipSymbol
      - timestamp
      - totalPrice
      - tradeSymbol
      - waypointSymbol
      type: object
    ShipModule:
      description: A module can be installed in a ship and provides a set of capabilities
        such as storage space or quarters for crew. Module installations are permanent.
      example:
        symbol: MODULE_MINERAL_PROCESSOR_I
        requirements:
          slots: 9
          power: 4
          crew: 5
        name: name
        range: 0
        description: description
        capacity: 0
      properties:
        symbol:
          description: The symbol of the module.
          enum:
          - MODULE_MINERAL_PROCESSOR_I
          - MODULE_GAS_PROCESSOR_I
          - MODULE_CARGO_HOLD_I
          - MODULE_CARGO_HOLD_II
          - MODULE_CARGO_HOLD_III
          - MODULE_CREW_QUARTERS_I
          - MODULE_ENVOY_QUARTERS_I
          - MODULE_PASSENGER_CABIN_I
          - MODULE_MICRO_REFINERY_I
          - MODULE_ORE_REFINERY_I
          - MODULE_FUEL_REFINERY_I
          - MODULE_SCIENCE_LAB_I
          - MODULE_JUMP_DRIVE_I
          - MODULE_JUMP_DRIVE_II
          - MODULE_JUMP_DRIVE_III
          - MODULE_WARP_DRIVE_I
          - MODULE_WARP_DRIVE_II
          - MODULE_WARP_DRIVE_III
          - MODULE_SHIELD_GENERATOR_I
          - MODULE_SHIELD_GENERATOR_II
          type: string
        capacity:
          description: "Modules that provide capacity, such as cargo hold or crew\
            \ quarters will show this value to denote how much of a bonus the module\
            \ grants."
          minimum: 0
          type: integer
        range:
          description: Modules that have a range will such as a sensor array show
            this value to denote how far can the module reach with its capabilities.
          minimum: 0
          type: integer
        name:
          description: Name of this module.
          type: string
        description:
          description: Description of this module.
          type: string
        requirements:
          $ref: '#/components/schemas/ShipRequirements'
      required:
      - description
      - name
      - requirements
      - symbol
      type: object
    ShipMount:
      description: A mount is installed on the exterier of a ship.
      example:
        symbol: MOUNT_GAS_SIPHON_I
        requirements:
          slots: 9
          power: 4
          crew: 5
        strength: 0
        name: name
        description: description
        deposits:
        - QUARTZ_SAND
        - QUARTZ_SAND
      properties:
        symbol:
          description: Symbo of this mount.
          enum:
          - MOUNT_GAS_SIPHON_I
          - MOUNT_GAS_SIPHON_II
          - MOUNT_GAS_SIPHON_III
          - MOUNT_SURVEYOR_I
          - MOUNT_SURVEYOR_II
          - MOUNT_SURVEYOR_III
          - MOUNT_SENSOR_ARRAY_I
          - MOUNT_SENSOR_ARRAY_II
          - MOUNT_SENSOR_ARRAY_III
          - MOUNT_MINING_LASER_I
          - MOUNT_MINING_LASER_II
          - MOUNT_MINING_LASER_III
          - MOUNT_LASER_CANNON_I
          - MOUNT_MISSILE_LAUNCHER_I
          - MOUNT_TURRET_I
          type: string
        name:
          description: Name of this mount.
          type: string
        description:
          description: Description of this mount.
          type: string
        strength:
          description: "Mounts that have this value, such as mining lasers, denote\
            \ how powerful this mount's capabilities are."
          minimum: 0
          type: integer
        deposits:
          description: Mounts that have this value denote what goods can be produced
            from using the mount.
          items:
            enum:
            - QUARTZ_SAND
            - SILICON_CRYSTALS
            - PRECIOUS_STONES
            - ICE_WATER
            - AMMONIA_ICE
            - IRON_ORE
            - COPPER_ORE
            - SILVER_ORE
            - ALUMINUM_ORE
            - GOLD_ORE
            - PLATINUM_ORE
            - DIAMONDS
            - URANITE_ORE
            - MERITIUM_ORE
            type: string
          type: array
        requirements:
          $ref: '#/components/schemas/ShipRequirements'
      required:
      - name
      - requirements
      - symbol
      type: object
    ShipNav:
      description: The navigation information of the ship.
      example:
        route:
          departureTime: 2000-01-23T04:56:07.000+00:00
          arrival: 2000-01-23T04:56:07.000+00:00
          origin:
            symbol: symbol
            systemSymbol: systemSymbol
            x: 7
            "y": 9
            type: null
          destination:
            symbol: symbol
            systemSymbol: systemSymbol
            x: 7
            "y": 9
            type: null
        systemSymbol: systemSymbol
        waypointSymbol: waypointSymbol
        flightMode: null
        status: null
      properties:
        systemSymbol:
          description: The symbol of the system.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}"
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        route:
          $ref: '#/components/schemas/ShipNavRoute'
        status:
          $ref: '#/components/schemas/ShipNavStatus'
        flightMode:
          $ref: '#/components/schemas/ShipNavFlightMode'
      required:
      - flightMode
      - route
      - status
      - systemSymbol
      - waypointSymbol
      type: object
    ShipNavFlightMode:
      default: CRUISE
      description: The ship's set speed when traveling between waypoints or systems.
      enum:
      - DRIFT
      - STEALTH
      - CRUISE
      - BURN
      type: string
    ShipNavRoute:
      description: The routing information for the ship's most recent transit or current
        location.
      example:
        departureTime: 2000-01-23T04:56:07.000+00:00
        arrival: 2000-01-23T04:56:07.000+00:00
        origin:
          symbol: symbol
          systemSymbol: systemSymbol
          x: 7
          "y": 9
          type: null
        destination:
          symbol: symbol
          systemSymbol: systemSymbol
          x: 7
          "y": 9
          type: null
      properties:
        destination:
          $ref: '#/components/schemas/ShipNavRouteWaypoint'
        origin:
          $ref: '#/components/schemas/ShipNavRouteWaypoint'
        departureTime:
          description: The date time of the ship's departure.
          format: date-time
          type: string
        arrival:
          description: "The date time of the ship's arrival. If the ship is in-transit,\
            \ this is the expected time of arrival."
          format: date-time
          type: string
      required:
      - arrival
      - departure
      - departureTime
      - destination
      - origin
      type: object
    ShipNavRouteWaypoint:
      description: The destination or departure of a ships nav route.
      example:
        symbol: symbol
        systemSymbol: systemSymbol
        x: 7
        "y": 9
        type: null
      properties:
        symbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/WaypointType'
        systemSymbol:
          description: The symbol of the system.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}"
        x:
          description: Position in the universe in the x axis.
          type: integer
        "y":
          description: Position in the universe in the y axis.
          type: integer
      required:
      - symbol
      - systemSymbol
      - type
      - x
      - "y"
      type: object
    ShipNavStatus:
      description: The current status of the ship
      enum:
      - IN_TRANSIT
      - IN_ORBIT
      - DOCKED
      type: string
    ShipReactor:
      description: The reactor of the ship. The reactor is responsible for powering
        the ship's systems and weapons.
      example:
        symbol: REACTOR_SOLAR_I
        condition: 0.9369310271410669
        integrity: 0.6683562403749608
        requirements:
          slots: 9
          power: 4
          crew: 5
        name: name
        description: description
        powerOutput: 1
      properties:
        symbol:
          description: Symbol of the reactor.
          enum:
          - REACTOR_SOLAR_I
          - REACTOR_FUSION_I
          - REACTOR_FISSION_I
          - REACTOR_CHEMICAL_I
          - REACTOR_ANTIMATTER_I
          type: string
        name:
          description: Name of the reactor.
          type: string
        description:
          description: Description of the reactor.
          type: string
        condition:
          description: "The repairable condition of a component. A value of 0 indicates\
            \ the component needs significant repairs, while a value of 1 indicates\
            \ the component is in near perfect condition. As the condition of a component\
            \ is repaired, the overall integrity of the component decreases."
          format: double
          maximum: 1
          minimum: 0
          type: number
        integrity:
          description: "The overall integrity of the component, which determines the\
            \ performance of the component. A value of 0 indicates that the component\
            \ is almost completely degraded, while a value of 1 indicates that the\
            \ component is in near perfect condition. The integrity of the component\
            \ is non-repairable, and represents permanent wear over time."
          format: double
          maximum: 1
          minimum: 0
          type: number
        powerOutput:
          description: "The amount of power provided by this reactor. The more power\
            \ a reactor provides to the ship, the lower the cooldown it gets when\
            \ using a module or mount that taxes the ship's power."
          minimum: 1
          type: integer
        requirements:
          $ref: '#/components/schemas/ShipRequirements'
      required:
      - condition
      - description
      - integrity
      - name
      - powerOutput
      - requirements
      - symbol
      type: object
    ShipRegistration:
      description: The public registration information of the ship
      example:
        role: null
        name: name
        factionSymbol: factionSymbol
      properties:
        name:
          description: The agent's registered name of the ship
          minLength: 1
          type: string
        factionSymbol:
          description: The symbol of the faction the ship is registered with
          minLength: 1
          type: string
        role:
          $ref: '#/components/schemas/ShipRole'
      required:
      - factionSymbol
      - name
      - role
      type: object
    ShipRequirements:
      description: The requirements for installation on a ship
      example:
        slots: 9
        power: 4
        crew: 5
      properties:
        power:
          description: The amount of power required from the reactor.
          type: integer
        crew:
          description: The number of crew required for operation.
          type: integer
        slots:
          description: The number of module slots required for installation.
          type: integer
      type: object
    ShipRole:
      description: The registered role of the ship
      enum:
      - FABRICATOR
      - HARVESTER
      - HAULER
      - INTERCEPTOR
      - EXCAVATOR
      - TRANSPORT
      - REPAIR
      - SURVEYOR
      - COMMAND
      - CARRIER
      - PATROL
      - SATELLITE
      - EXPLORER
      - REFINERY
      type: string
    ShipType:
      description: Type of ship
      enum:
      - SHIP_PROBE
      - SHIP_MINING_DRONE
      - SHIP_SIPHON_DRONE
      - SHIP_INTERCEPTOR
      - SHIP_LIGHT_HAULER
      - SHIP_COMMAND_FRIGATE
      - SHIP_EXPLORER
      - SHIP_HEAVY_FREIGHTER
      - SHIP_LIGHT_SHUTTLE
      - SHIP_ORE_HOUND
      - SHIP_REFINING_FREIGHTER
      - SHIP_SURVEYOR
      type: string
    Shipyard:
      description: ""
      example:
        shipTypes:
        - type: null
        - type: null
        symbol: symbol
        ships:
        - activity: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          name: name
          description: description
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          purchasePrice: 6
          type: null
          supply: null
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
          crew:
            required: 1
            capacity: 5
        - activity: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          name: name
          description: description
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          purchasePrice: 6
          type: null
          supply: null
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
          crew:
            required: 1
            capacity: 5
        modificationsFee: 5
        transactions:
        - waypointSymbol: waypointSymbol
          price: 0
          shipType: shipType
          shipSymbol: shipSymbol
          agentSymbol: agentSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
        - waypointSymbol: waypointSymbol
          price: 0
          shipType: shipType
          shipSymbol: shipSymbol
          agentSymbol: agentSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        symbol:
          description: The symbol of the shipyard. The symbol is the same as the waypoint
            where the shipyard is located.
          minLength: 1
          type: string
        shipTypes:
          description: The list of ship types available for purchase at this shipyard.
          items:
            $ref: '#/components/schemas/Shipyard_shipTypes_inner'
          type: array
        transactions:
          description: The list of recent transactions at this shipyard.
          items:
            $ref: '#/components/schemas/ShipyardTransaction'
          type: array
        ships:
          description: The ships that are currently available for purchase at the
            shipyard.
          items:
            $ref: '#/components/schemas/ShipyardShip'
          type: array
        modificationsFee:
          description: "The fee to modify a ship at this shipyard. This includes installing\
            \ or removing modules and mounts on a ship. In the case of mounts, the\
            \ fee is a flat rate per mount. In the case of modules, the fee is per\
            \ slot the module occupies."
          type: integer
      required:
      - modificationsFee
      - shipTypes
      - symbol
      type: object
    ShipyardShip:
      description: ""
      example:
        activity: null
        engine:
          symbol: ENGINE_IMPULSE_DRIVE_I
          condition: 0.9018348186070783
          integrity: 0.6438423552598547
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          description: description
          speed: 1
        reactor:
          symbol: REACTOR_SOLAR_I
          condition: 0.9369310271410669
          integrity: 0.6683562403749608
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          description: description
          powerOutput: 1
        name: name
        description: description
        mounts:
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        purchasePrice: 6
        type: null
        supply: null
        modules:
        - symbol: MODULE_MINERAL_PROCESSOR_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          range: 0
          description: description
          capacity: 0
        - symbol: MODULE_MINERAL_PROCESSOR_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          name: name
          range: 0
          description: description
          capacity: 0
        frame:
          symbol: FRAME_PROBE
          condition: 0.10246457001441578
          integrity: 0.14894159098541704
          moduleSlots: 0
          requirements:
            slots: 9
            power: 4
            crew: 5
          fuelCapacity: 0
          name: name
          description: description
          mountingPoints: 0
        crew:
          required: 1
          capacity: 5
      properties:
        type:
          $ref: '#/components/schemas/ShipType'
        name:
          type: string
        description:
          type: string
        supply:
          $ref: '#/components/schemas/SupplyLevel'
        activity:
          $ref: '#/components/schemas/ActivityLevel'
        purchasePrice:
          type: integer
        frame:
          $ref: '#/components/schemas/ShipFrame'
        reactor:
          $ref: '#/components/schemas/ShipReactor'
        engine:
          $ref: '#/components/schemas/ShipEngine'
        modules:
          items:
            $ref: '#/components/schemas/ShipModule'
          type: array
        mounts:
          items:
            $ref: '#/components/schemas/ShipMount'
          type: array
        crew:
          $ref: '#/components/schemas/ShipyardShip_crew'
      required:
      - crew
      - description
      - engine
      - frame
      - modules
      - mounts
      - name
      - purchasePrice
      - reactor
      - supply
      - symbol
      - type
      type: object
    ShipyardTransaction:
      description: Results of a transaction with a shipyard.
      example:
        waypointSymbol: waypointSymbol
        price: 0
        shipType: shipType
        shipSymbol: shipSymbol
        agentSymbol: agentSymbol
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        waypointSymbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        shipSymbol:
          deprecated: true
          description: The symbol of the ship that was the subject of the transaction.
          type: string
        shipType:
          description: The symbol of the ship that was the subject of the transaction.
          type: string
        price:
          description: The price of the transaction.
          minimum: 0
          type: integer
        agentSymbol:
          description: The symbol of the agent that made the transaction.
          type: string
        timestamp:
          description: The timestamp of the transaction.
          format: date-time
          type: string
      required:
      - agentSymbol
      - price
      - shipSymbol
      - shipType
      - timestamp
      - waypointSymbol
      type: object
    Siphon:
      description: Siphon details.
      example:
        yield:
          symbol: null
          units: 0
        shipSymbol: shipSymbol
      properties:
        shipSymbol:
          description: Symbol of the ship that executed the siphon.
          minLength: 1
          type: string
        yield:
          $ref: '#/components/schemas/SiphonYield'
      required:
      - shipSymbol
      - yield
      type: object
    SiphonYield:
      description: A yield from the siphon operation.
      example:
        symbol: null
        units: 0
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: The number of units siphoned that were placed into the ship's
            cargo hold.
          type: integer
      required:
      - symbol
      - units
      type: object
    SupplyLevel:
      description: The supply level of a trade good.
      enum:
      - SCARCE
      - LIMITED
      - MODERATE
      - HIGH
      - ABUNDANT
      type: string
    Survey:
      description: "A resource survey of a waypoint, detailing a specific extraction\
        \ location and the types of resources that can be found there."
      example:
        symbol: symbol
        size: SMALL
        signature: signature
        expiration: 2000-01-23T04:56:07.000+00:00
        deposits:
        - symbol: symbol
        - symbol: symbol
      properties:
        signature:
          description: A unique signature for the location of this survey. This signature
            is verified when attempting an extraction using this survey.
          minLength: 1
          type: string
        symbol:
          description: The symbol of the waypoint that this survey is for.
          minLength: 1
          type: string
        deposits:
          description: "A list of deposits that can be found at this location. A ship\
            \ will extract one of these deposits when using this survey in an extraction\
            \ request. If multiple deposits of the same type are present, the chance\
            \ of extracting that deposit is increased."
          items:
            $ref: '#/components/schemas/SurveyDeposit'
          type: array
        expiration:
          description: "The date and time when the survey expires. After this date\
            \ and time, the survey will no longer be available for extraction."
          format: date-time
          type: string
        size:
          description: The size of the deposit. This value indicates how much can
            be extracted from the survey before it is exhausted.
          enum:
          - SMALL
          - MODERATE
          - LARGE
          type: string
      required:
      - deposits
      - expiration
      - signature
      - size
      - symbol
      type: object
    SurveyDeposit:
      description: A surveyed deposit of a mineral or resource available for extraction.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the deposit.
          type: string
      required:
      - symbol
      type: object
    System:
      example:
        symbol: symbol
        sectorSymbol: sectorSymbol
        x: 0
        "y": 6
        type: null
        waypoints:
        - symbol: symbol
          orbits: orbits
          x: 1
          "y": 5
          type: null
          orbitals:
          - symbol: symbol
          - symbol: symbol
        - symbol: symbol
          orbits: orbits
          x: 1
          "y": 5
          type: null
          orbitals:
          - symbol: symbol
          - symbol: symbol
        factions:
        - symbol: null
        - symbol: null
      properties:
        symbol:
          description: The symbol of the system.
          minLength: 1
          type: string
        sectorSymbol:
          description: The symbol of the sector.
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/SystemType'
        x:
          description: Relative position of the system in the sector in the x axis.
          type: integer
        "y":
          description: Relative position of the system in the sector in the y axis.
          type: integer
        waypoints:
          description: Waypoints in this system.
          items:
            $ref: '#/components/schemas/SystemWaypoint'
          type: array
        factions:
          description: Factions that control this system.
          items:
            $ref: '#/components/schemas/SystemFaction'
          type: array
      required:
      - factions
      - sectorSymbol
      - symbol
      - type
      - waypoints
      - x
      - "y"
      type: object
    SystemFaction:
      example:
        symbol: null
      properties:
        symbol:
          $ref: '#/components/schemas/FactionSymbol'
      required:
      - symbol
      type: object
    SystemSymbol:
      description: The symbol of the system.
      minLength: 1
      type: string
      x-faker:
        fake:
        - "X1-{{random.alphaNumeric(5)}}"
    SystemType:
      description: The type of system.
      enum:
      - NEUTRON_STAR
      - RED_STAR
      - ORANGE_STAR
      - BLUE_STAR
      - YOUNG_STAR
      - WHITE_DWARF
      - BLACK_HOLE
      - HYPERGIANT
      - NEBULA
      - UNSTABLE
      type: string
    SystemWaypoint:
      example:
        symbol: symbol
        orbits: orbits
        x: 1
        "y": 5
        type: null
        orbitals:
        - symbol: symbol
        - symbol: symbol
      properties:
        symbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        type:
          $ref: '#/components/schemas/WaypointType'
        x:
          description: Relative position of the waypoint on the system's x axis. This
            is not an absolute position in the universe.
          type: integer
        "y":
          description: Relative position of the waypoint on the system's y axis. This
            is not an absolute position in the universe.
          type: integer
        orbitals:
          description: Waypoints that orbit this waypoint.
          items:
            $ref: '#/components/schemas/WaypointOrbital'
          type: array
        orbits:
          description: "The symbol of the parent waypoint, if this waypoint is in\
            \ orbit around another waypoint. Otherwise this value is undefined."
          minLength: 1
          type: string
      required:
      - orbitals
      - symbol
      - type
      - x
      - "y"
      type: object
    TradeGood:
      description: A good that can be traded for other goods or currency.
      example:
        symbol: null
        name: name
        description: description
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        name:
          description: The name of the good.
          type: string
        description:
          description: The description of the good.
          type: string
      required:
      - description
      - name
      - symbol
      type: object
    TradeSymbol:
      description: The good's symbol.
      enum:
      - PRECIOUS_STONES
      - QUARTZ_SAND
      - SILICON_CRYSTALS
      - AMMONIA_ICE
      - LIQUID_HYDROGEN
      - LIQUID_NITROGEN
      - ICE_WATER
      - EXOTIC_MATTER
      - ADVANCED_CIRCUITRY
      - GRAVITON_EMITTERS
      - IRON
      - IRON_ORE
      - COPPER
      - COPPER_ORE
      - ALUMINUM
      - ALUMINUM_ORE
      - SILVER
      - SILVER_ORE
      - GOLD
      - GOLD_ORE
      - PLATINUM
      - PLATINUM_ORE
      - DIAMONDS
      - URANITE
      - URANITE_ORE
      - MERITIUM
      - MERITIUM_ORE
      - HYDROCARBON
      - ANTIMATTER
      - FAB_MATS
      - FERTILIZERS
      - FABRICS
      - FOOD
      - JEWELRY
      - MACHINERY
      - FIREARMS
      - ASSAULT_RIFLES
      - MILITARY_EQUIPMENT
      - EXPLOSIVES
      - LAB_INSTRUMENTS
      - AMMUNITION
      - ELECTRONICS
      - SHIP_PLATING
      - SHIP_PARTS
      - EQUIPMENT
      - FUEL
      - MEDICINE
      - DRUGS
      - CLOTHING
      - MICROPROCESSORS
      - PLASTICS
      - POLYNUCLEOTIDES
      - BIOCOMPOSITES
      - QUANTUM_STABILIZERS
      - NANOBOTS
      - AI_MAINFRAMES
      - QUANTUM_DRIVES
      - ROBOTIC_DRONES
      - CYBER_IMPLANTS
      - GENE_THERAPEUTICS
      - NEURAL_CHIPS
      - MOOD_REGULATORS
      - VIRAL_AGENTS
      - MICRO_FUSION_GENERATORS
      - SUPERGRAINS
      - LASER_RIFLES
      - HOLOGRAPHICS
      - SHIP_SALVAGE
      - RELIC_TECH
      - NOVEL_LIFEFORMS
      - BOTANICAL_SPECIMENS
      - CULTURAL_ARTIFACTS
      - FRAME_PROBE
      - FRAME_DRONE
      - FRAME_INTERCEPTOR
      - FRAME_RACER
      - FRAME_FIGHTER
      - FRAME_FRIGATE
      - FRAME_SHUTTLE
      - FRAME_EXPLORER
      - FRAME_MINER
      - FRAME_LIGHT_FREIGHTER
      - FRAME_HEAVY_FREIGHTER
      - FRAME_TRANSPORT
      - FRAME_DESTROYER
      - FRAME_CRUISER
      - FRAME_CARRIER
      - REACTOR_SOLAR_I
      - REACTOR_FUSION_I
      - REACTOR_FISSION_I
      - REACTOR_CHEMICAL_I
      - REACTOR_ANTIMATTER_I
      - ENGINE_IMPULSE_DRIVE_I
      - ENGINE_ION_DRIVE_I
      - ENGINE_ION_DRIVE_II
      - ENGINE_HYPER_DRIVE_I
      - MODULE_MINERAL_PROCESSOR_I
      - MODULE_GAS_PROCESSOR_I
      - MODULE_CARGO_HOLD_I
      - MODULE_CARGO_HOLD_II
      - MODULE_CARGO_HOLD_III
      - MODULE_CREW_QUARTERS_I
      - MODULE_ENVOY_QUARTERS_I
      - MODULE_PASSENGER_CABIN_I
      - MODULE_MICRO_REFINERY_I
      - MODULE_SCIENCE_LAB_I
      - MODULE_JUMP_DRIVE_I
      - MODULE_JUMP_DRIVE_II
      - MODULE_JUMP_DRIVE_III
      - MODULE_WARP_DRIVE_I
      - MODULE_WARP_DRIVE_II
      - MODULE_WARP_DRIVE_III
      - MODULE_SHIELD_GENERATOR_I
      - MODULE_SHIELD_GENERATOR_II
      - MODULE_ORE_REFINERY_I
      - MODULE_FUEL_REFINERY_I
      - MOUNT_GAS_SIPHON_I
      - MOUNT_GAS_SIPHON_II
      - MOUNT_GAS_SIPHON_III
      - MOUNT_SURVEYOR_I
      - MOUNT_SURVEYOR_II
      - MOUNT_SURVEYOR_III
      - MOUNT_SENSOR_ARRAY_I
      - MOUNT_SENSOR_ARRAY_II
      - MOUNT_SENSOR_ARRAY_III
      - MOUNT_MINING_LASER_I
      - MOUNT_MINING_LASER_II
      - MOUNT_MINING_LASER_III
      - MOUNT_LASER_CANNON_I
      - MOUNT_MISSILE_LAUNCHER_I
      - MOUNT_TURRET_I
      - SHIP_PROBE
      - SHIP_MINING_DRONE
      - SHIP_SIPHON_DRONE
      - SHIP_INTERCEPTOR
      - SHIP_LIGHT_HAULER
      - SHIP_COMMAND_FRIGATE
      - SHIP_EXPLORER
      - SHIP_HEAVY_FREIGHTER
      - SHIP_LIGHT_SHUTTLE
      - SHIP_ORE_HOUND
      - SHIP_REFINING_FREIGHTER
      - SHIP_SURVEYOR
      type: string
    Waypoint:
      description: "A waypoint is a location that ships can travel to such as a Planet,\
        \ Moon or Space Station."
      example:
        symbol: symbol
        traits:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        systemSymbol: systemSymbol
        orbits: orbits
        faction:
          symbol: null
        x: 0
        "y": 6
        type: null
        modifiers:
        - symbol: null
          name: name
          description: description
        - symbol: null
          name: name
          description: description
        chart:
          submittedBy: submittedBy
          waypointSymbol: waypointSymbol
          submittedOn: 2000-01-23T04:56:07.000+00:00
        isUnderConstruction: true
        orbitals:
        - symbol: symbol
        - symbol: symbol
      properties:
        symbol:
          description: The symbol of the waypoint.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
        type:
          $ref: '#/components/schemas/WaypointType'
        systemSymbol:
          description: The symbol of the system.
          minLength: 1
          type: string
          x-faker:
            fake:
            - "X1-{{random.alphaNumeric(5)}}"
        x:
          description: Relative position of the waypoint on the system's x axis. This
            is not an absolute position in the universe.
          type: integer
        "y":
          description: Relative position of the waypoint on the system's y axis. This
            is not an absolute position in the universe.
          type: integer
        orbitals:
          description: Waypoints that orbit this waypoint.
          items:
            $ref: '#/components/schemas/WaypointOrbital'
          type: array
        orbits:
          description: "The symbol of the parent waypoint, if this waypoint is in\
            \ orbit around another waypoint. Otherwise this value is undefined."
          minLength: 1
          type: string
        faction:
          $ref: '#/components/schemas/WaypointFaction'
        traits:
          description: The traits of the waypoint.
          items:
            $ref: '#/components/schemas/WaypointTrait'
          type: array
        modifiers:
          description: The modifiers of the waypoint.
          items:
            $ref: '#/components/schemas/WaypointModifier'
          type: array
        chart:
          $ref: '#/components/schemas/Chart'
        isUnderConstruction:
          description: True if the waypoint is under construction.
          type: boolean
      required:
      - isUnderConstruction
      - orbitals
      - symbol
      - systemSymbol
      - traits
      - type
      - x
      - "y"
      type: object
    WaypointFaction:
      description: The faction that controls the waypoint.
      example:
        symbol: null
      properties:
        symbol:
          $ref: '#/components/schemas/FactionSymbol'
      required:
      - symbol
      type: object
    WaypointModifier:
      example:
        symbol: null
        name: name
        description: description
      properties:
        symbol:
          $ref: '#/components/schemas/WaypointModifierSymbol'
        name:
          description: The name of the trait.
          type: string
        description:
          description: A description of the trait.
          type: string
      required:
      - description
      - name
      - symbol
      type: object
    WaypointModifierSymbol:
      description: The unique identifier of the modifier.
      enum:
      - STRIPPED
      - UNSTABLE
      - RADIATION_LEAK
      - CRITICAL_LIMIT
      - CIVIL_UNREST
      type: string
    WaypointOrbital:
      description: An orbital is another waypoint that orbits a parent waypoint.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the orbiting waypoint.
          minLength: 1
          type: string
      required:
      - symbol
      type: object
    WaypointSymbol:
      description: The symbol of the waypoint.
      minLength: 1
      type: string
      x-faker:
        fake:
        - "X1-{{random.alphaNumeric(5)}}-{{random.alphaNumeric(5)}}"
    WaypointTrait:
      example:
        symbol: null
        name: name
        description: description
      properties:
        symbol:
          $ref: '#/components/schemas/WaypointTraitSymbol'
        name:
          description: The name of the trait.
          type: string
        description:
          description: A description of the trait.
          type: string
      required:
      - description
      - name
      - symbol
      type: object
    WaypointTraitSymbol:
      description: The unique identifier of the trait.
      enum:
      - UNCHARTED
      - UNDER_CONSTRUCTION
      - MARKETPLACE
      - SHIPYARD
      - OUTPOST
      - SCATTERED_SETTLEMENTS
      - SPRAWLING_CITIES
      - MEGA_STRUCTURES
      - PIRATE_BASE
      - OVERCROWDED
      - HIGH_TECH
      - CORRUPT
      - BUREAUCRATIC
      - TRADING_HUB
      - INDUSTRIAL
      - BLACK_MARKET
      - RESEARCH_FACILITY
      - MILITARY_BASE
      - SURVEILLANCE_OUTPOST
      - EXPLORATION_OUTPOST
      - MINERAL_DEPOSITS
      - COMMON_METAL_DEPOSITS
      - PRECIOUS_METAL_DEPOSITS
      - RARE_METAL_DEPOSITS
      - METHANE_POOLS
      - ICE_CRYSTALS
      - EXPLOSIVE_GASES
      - STRONG_MAGNETOSPHERE
      - VIBRANT_AURORAS
      - SALT_FLATS
      - CANYONS
      - PERPETUAL_DAYLIGHT
      - PERPETUAL_OVERCAST
      - DRY_SEABEDS
      - MAGMA_SEAS
      - SUPERVOLCANOES
      - ASH_CLOUDS
      - VAST_RUINS
      - MUTATED_FLORA
      - TERRAFORMED
      - EXTREME_TEMPERATURES
      - EXTREME_PRESSURE
      - DIVERSE_LIFE
      - SCARCE_LIFE
      - FOSSILS
      - WEAK_GRAVITY
      - STRONG_GRAVITY
      - CRUSHING_GRAVITY
      - TOXIC_ATMOSPHERE
      - CORROSIVE_ATMOSPHERE
      - BREATHABLE_ATMOSPHERE
      - THIN_ATMOSPHERE
      - JOVIAN
      - ROCKY
      - VOLCANIC
      - FROZEN
      - SWAMP
      - BARREN
      - TEMPERATE
      - JUNGLE
      - OCEAN
      - RADIOACTIVE
      - MICRO_GRAVITY_ANOMALIES
      - DEBRIS_CLUSTER
      - DEEP_CRATERS
      - SHALLOW_CRATERS
      - UNSTABLE_COMPOSITION
      - HOLLOWED_INTERIOR
      - STRIPPED
      type: string
    WaypointType:
      description: The type of waypoint.
      enum:
      - PLANET
      - GAS_GIANT
      - MOON
      - ORBITAL_STATION
      - JUMP_GATE
      - ASTEROID_FIELD
      - ASTEROID
      - ENGINEERED_ASTEROID
      - ASTEROID_BASE
      - NEBULA
      - DEBRIS_FIELD
      - GRAVITY_WELL
      - ARTIFICIAL_GRAVITY_WELL
      - FUEL_STATION
      type: string
    get_status_200_response_stats:
      example:
        ships: 6
        systems: 1
        waypoints: 5
        agents: 0
      properties:
        agents:
          description: Number of registered agents in the game.
          type: integer
        ships:
          description: Total number of ships in the game.
          type: integer
        systems:
          description: Total number of systems in the game.
          type: integer
        waypoints:
          description: Total number of waypoints in the game.
          type: integer
      required:
      - agents
      - ships
      - systems
      - waypoints
      type: object
    get_status_200_response_leaderboards_mostCredits_inner:
      example:
        credits: 5
        agentSymbol: agentSymbol
      properties:
        agentSymbol:
          description: Symbol of the agent.
          type: string
        credits:
          description: Amount of credits.
          format: int64
          type: integer
      required:
      - agentSymbol
      - credits
      type: object
    get_status_200_response_leaderboards_mostSubmittedCharts_inner:
      example:
        chartCount: 2
        agentSymbol: agentSymbol
      properties:
        agentSymbol:
          description: Symbol of the agent.
          type: string
        chartCount:
          description: Amount of charts done by the agent.
          type: integer
      required:
      - agentSymbol
      - chartCount
      type: object
    get_status_200_response_leaderboards:
      example:
        mostCredits:
        - credits: 5
          agentSymbol: agentSymbol
        - credits: 5
          agentSymbol: agentSymbol
        mostSubmittedCharts:
        - chartCount: 2
          agentSymbol: agentSymbol
        - chartCount: 2
          agentSymbol: agentSymbol
      properties:
        mostCredits:
          description: Top agents with the most credits.
          items:
            $ref: '#/components/schemas/get_status_200_response_leaderboards_mostCredits_inner'
          type: array
        mostSubmittedCharts:
          description: Top agents with the most charted submitted.
          items:
            $ref: '#/components/schemas/get_status_200_response_leaderboards_mostSubmittedCharts_inner'
          type: array
      required:
      - mostCredits
      - mostSubmittedCharts
      type: object
    get_status_200_response_serverResets:
      example:
        next: next
        frequency: frequency
      properties:
        next:
          description: The date and time when the game server will reset.
          type: string
        frequency:
          description: How often we intend to reset the game server.
          type: string
      required:
      - frequency
      - next
      type: object
    get_status_200_response_announcements_inner:
      example:
        title: title
        body: body
      properties:
        title:
          type: string
        body:
          type: string
      required:
      - body
      - title
      type: object
    get_status_200_response_links_inner:
      example:
        name: name
        url: url
      properties:
        name:
          type: string
        url:
          type: string
      required:
      - name
      - url
      type: object
    get_status_200_response:
      example:
        serverResets:
          next: next
          frequency: frequency
        resetDate: resetDate
        stats:
          ships: 6
          systems: 1
          waypoints: 5
          agents: 0
        description: description
        links:
        - name: name
          url: url
        - name: name
          url: url
        leaderboards:
          mostCredits:
          - credits: 5
            agentSymbol: agentSymbol
          - credits: 5
            agentSymbol: agentSymbol
          mostSubmittedCharts:
          - chartCount: 2
            agentSymbol: agentSymbol
          - chartCount: 2
            agentSymbol: agentSymbol
        version: version
        announcements:
        - title: title
          body: body
        - title: title
          body: body
        status: status
      properties:
        status:
          description: The current status of the game server.
          type: string
        version:
          description: The current version of the API.
          type: string
        resetDate:
          description: The date when the game server was last reset.
          type: string
        description:
          type: string
        stats:
          $ref: '#/components/schemas/get_status_200_response_stats'
        leaderboards:
          $ref: '#/components/schemas/get_status_200_response_leaderboards'
        serverResets:
          $ref: '#/components/schemas/get_status_200_response_serverResets'
        announcements:
          items:
            $ref: '#/components/schemas/get_status_200_response_announcements_inner'
          type: array
        links:
          items:
            $ref: '#/components/schemas/get_status_200_response_links_inner'
          type: array
      required:
      - announcements
      - description
      - leaderboards
      - links
      - resetDate
      - serverResets
      - stats
      - status
      - version
      type: object
    register_request:
      properties:
        faction:
          $ref: '#/components/schemas/FactionSymbol'
        symbol:
          description: "Your desired agent symbol. This will be a unique name used\
            \ to represent your agent, and will be the prefix for your ships."
          example: BADGER
          maxLength: 14
          minLength: 3
          type: string
        email:
          description: Your email address. This is used if you reserved your call
            sign between resets.
          type: string
      required:
      - faction
      - symbol
      type: object
    register_201_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        contract:
          terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
        faction:
          isRecruiting: true
          symbol: null
          headquarters: headquarters
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          name: name
          description: description
        ship:
          symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
        token: token
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        contract:
          $ref: '#/components/schemas/Contract'
        faction:
          $ref: '#/components/schemas/Faction'
        ship:
          $ref: '#/components/schemas/Ship'
        token:
          description: A Bearer token for accessing secured API endpoints.
          type: string
      required:
      - agent
      - contract
      - faction
      - ship
      - token
      type: object
    register_201_response:
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          contract:
            terms:
              deliver:
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              payment:
                onFulfilled: 5
                onAccepted: 1
              deadline: 2000-01-23T04:56:07.000+00:00
            factionSymbol: factionSymbol
            fulfilled: false
            accepted: false
            expiration: 2000-01-23T04:56:07.000+00:00
            id: id
            type: PROCUREMENT
            deadlineToAccept: 2000-01-23T04:56:07.000+00:00
          faction:
            isRecruiting: true
            symbol: null
            headquarters: headquarters
            traits:
            - symbol: null
              name: name
              description: description
            - symbol: null
              name: name
              description: description
            name: name
            description: description
          ship:
            symbol: symbol
            nav:
              route:
                departureTime: 2000-01-23T04:56:07.000+00:00
                arrival: 2000-01-23T04:56:07.000+00:00
                origin:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
                destination:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
              systemSymbol: systemSymbol
              waypointSymbol: waypointSymbol
              flightMode: null
              status: null
            engine:
              symbol: ENGINE_IMPULSE_DRIVE_I
              condition: 0.9018348186070783
              integrity: 0.6438423552598547
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              speed: 1
            fuel:
              consumed:
                amount: 0
                timestamp: 2000-01-23T04:56:07.000+00:00
              current: 0
              capacity: 0
            reactor:
              symbol: REACTOR_SOLAR_I
              condition: 0.9369310271410669
              integrity: 0.6683562403749608
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              powerOutput: 1
            cooldown:
              remainingSeconds: 0
              totalSeconds: 0
              shipSymbol: shipSymbol
              expiration: 2000-01-23T04:56:07.000+00:00
            mounts:
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            registration:
              role: null
              name: name
              factionSymbol: factionSymbol
            cargo:
              units: 0
              inventory:
              - symbol: null
                name: name
                description: description
                units: 1
              - symbol: null
                name: name
                description: description
                units: 1
              capacity: 0
            modules:
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            crew:
              wages: 0
              current: 3
              rotation: STRICT
              morale: 73
              required: 2
              capacity: 4
            frame:
              symbol: FRAME_PROBE
              condition: 0.10246457001441578
              integrity: 0.14894159098541704
              moduleSlots: 0
              requirements:
                slots: 9
                power: 4
                crew: 5
              fuelCapacity: 0
              name: name
              description: description
              mountingPoints: 0
          token: token
      properties:
        data:
          $ref: '#/components/schemas/register_201_response_data'
      required:
      - data
      type: object
    get_systems_200_response:
      description: ""
      example:
        data:
        - symbol: symbol
          sectorSymbol: sectorSymbol
          x: 0
          "y": 6
          type: null
          waypoints:
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          factions:
          - symbol: null
          - symbol: null
        - symbol: symbol
          sectorSymbol: sectorSymbol
          x: 0
          "y": 6
          type: null
          waypoints:
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          factions:
          - symbol: null
          - symbol: null
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/System'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    get_system_200_response:
      description: ""
      example:
        data:
          symbol: symbol
          sectorSymbol: sectorSymbol
          x: 0
          "y": 6
          type: null
          waypoints:
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          - symbol: symbol
            orbits: orbits
            x: 1
            "y": 5
            type: null
            orbitals:
            - symbol: symbol
            - symbol: symbol
          factions:
          - symbol: null
          - symbol: null
      properties:
        data:
          $ref: '#/components/schemas/System'
      required:
      - data
      type: object
    get_system_waypoints_traits_parameter:
      oneOf:
      - $ref: '#/components/schemas/WaypointTraitSymbol'
      - items:
          $ref: '#/components/schemas/WaypointTraitSymbol'
        type: array
    get_system_waypoints_200_response:
      description: ""
      example:
        data:
        - symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          orbits: orbits
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          modifiers:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          isUnderConstruction: true
          orbitals:
          - symbol: symbol
          - symbol: symbol
        - symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          orbits: orbits
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          modifiers:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          isUnderConstruction: true
          orbitals:
          - symbol: symbol
          - symbol: symbol
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Waypoint'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    get_waypoint_200_response:
      description: ""
      example:
        data:
          symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          orbits: orbits
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          modifiers:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          isUnderConstruction: true
          orbitals:
          - symbol: symbol
          - symbol: symbol
      properties:
        data:
          $ref: '#/components/schemas/Waypoint'
      required:
      - data
      type: object
    get_market_200_response:
      example:
        data:
          symbol: symbol
          imports:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          tradeGoods:
          - tradeVolume: 1
            symbol: null
            activity: null
            sellPrice: 0
            purchasePrice: 0
            type: EXPORT
            supply: null
          - tradeVolume: 1
            symbol: null
            activity: null
            sellPrice: 0
            purchasePrice: 0
            type: EXPORT
            supply: null
          exports:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          exchange:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          transactions:
          - tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
          - tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Market'
      required:
      - data
      type: object
    get_shipyard_200_response:
      description: ""
      example:
        data:
          shipTypes:
          - type: null
          - type: null
          symbol: symbol
          ships:
          - activity: null
            engine:
              symbol: ENGINE_IMPULSE_DRIVE_I
              condition: 0.9018348186070783
              integrity: 0.6438423552598547
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              speed: 1
            reactor:
              symbol: REACTOR_SOLAR_I
              condition: 0.9369310271410669
              integrity: 0.6683562403749608
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              powerOutput: 1
            name: name
            description: description
            mounts:
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            purchasePrice: 6
            type: null
            supply: null
            modules:
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            frame:
              symbol: FRAME_PROBE
              condition: 0.10246457001441578
              integrity: 0.14894159098541704
              moduleSlots: 0
              requirements:
                slots: 9
                power: 4
                crew: 5
              fuelCapacity: 0
              name: name
              description: description
              mountingPoints: 0
            crew:
              required: 1
              capacity: 5
          - activity: null
            engine:
              symbol: ENGINE_IMPULSE_DRIVE_I
              condition: 0.9018348186070783
              integrity: 0.6438423552598547
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              speed: 1
            reactor:
              symbol: REACTOR_SOLAR_I
              condition: 0.9369310271410669
              integrity: 0.6683562403749608
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              powerOutput: 1
            name: name
            description: description
            mounts:
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            purchasePrice: 6
            type: null
            supply: null
            modules:
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            frame:
              symbol: FRAME_PROBE
              condition: 0.10246457001441578
              integrity: 0.14894159098541704
              moduleSlots: 0
              requirements:
                slots: 9
                power: 4
                crew: 5
              fuelCapacity: 0
              name: name
              description: description
              mountingPoints: 0
            crew:
              required: 1
              capacity: 5
          modificationsFee: 5
          transactions:
          - waypointSymbol: waypointSymbol
            price: 0
            shipType: shipType
            shipSymbol: shipSymbol
            agentSymbol: agentSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
          - waypointSymbol: waypointSymbol
            price: 0
            shipType: shipType
            shipSymbol: shipSymbol
            agentSymbol: agentSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Shipyard'
      required:
      - data
      type: object
    get_jump_gate_200_response:
      description: ""
      example:
        data:
          symbol: symbol
          connections:
          - connections
          - connections
      properties:
        data:
          $ref: '#/components/schemas/JumpGate'
      required:
      - data
      type: object
    get_construction_200_response:
      description: ""
      example:
        data:
          symbol: symbol
          materials:
          - tradeSymbol: null
            fulfilled: 6
            required: 0
          - tradeSymbol: null
            fulfilled: 6
            required: 0
          isComplete: true
      properties:
        data:
          $ref: '#/components/schemas/Construction'
      required:
      - data
      type: object
    supply_construction_request:
      properties:
        shipSymbol:
          description: Symbol of the ship to use.
          type: string
        tradeSymbol:
          description: The symbol of the good to supply.
          type: string
        units:
          description: Amount of units to supply.
          type: integer
      required:
      - shipSymbol
      - tradeSymbol
      - units
      type: object
    supply_construction_201_response_data:
      example:
        construction:
          symbol: symbol
          materials:
          - tradeSymbol: null
            fulfilled: 6
            required: 0
          - tradeSymbol: null
            fulfilled: 6
            required: 0
          isComplete: true
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
      properties:
        construction:
          $ref: '#/components/schemas/Construction'
        cargo:
          $ref: '#/components/schemas/ShipCargo'
      required:
      - cargo
      - construction
      type: object
    supply_construction_201_response:
      description: ""
      example:
        data:
          construction:
            symbol: symbol
            materials:
            - tradeSymbol: null
              fulfilled: 6
              required: 0
            - tradeSymbol: null
              fulfilled: 6
              required: 0
            isComplete: true
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/supply_construction_201_response_data'
      required:
      - data
      type: object
    get_factions_200_response:
      example:
        data:
        - isRecruiting: true
          symbol: null
          headquarters: headquarters
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          name: name
          description: description
        - isRecruiting: true
          symbol: null
          headquarters: headquarters
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          name: name
          description: description
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Faction'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    get_faction_200_response:
      example:
        data:
          isRecruiting: true
          symbol: null
          headquarters: headquarters
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          name: name
          description: description
      properties:
        data:
          $ref: '#/components/schemas/Faction'
      required:
      - data
      type: object
    get_my_agent_200_response:
      example:
        data:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
      properties:
        data:
          $ref: '#/components/schemas/Agent'
      required:
      - data
      type: object
    get_agents_200_response:
      example:
        data:
        - accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        - accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    get_contracts_200_response:
      description: ""
      example:
        data:
        - terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
        - terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Contract'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    get_contract_200_response:
      example:
        data:
          terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Contract'
      required:
      - data
      type: object
    accept_contract_200_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        contract:
          terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        contract:
          $ref: '#/components/schemas/Contract'
      required:
      - agent
      - contract
      type: object
    accept_contract_200_response:
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          contract:
            terms:
              deliver:
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              payment:
                onFulfilled: 5
                onAccepted: 1
              deadline: 2000-01-23T04:56:07.000+00:00
            factionSymbol: factionSymbol
            fulfilled: false
            accepted: false
            expiration: 2000-01-23T04:56:07.000+00:00
            id: id
            type: PROCUREMENT
            deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/accept_contract_200_response_data'
      required:
      - data
      type: object
    deliver_contract_request:
      properties:
        shipSymbol:
          description: Symbol of a ship located in the destination to deliver a contract
            and that has a good to deliver in its cargo.
          type: string
        tradeSymbol:
          description: The symbol of the good to deliver.
          type: string
        units:
          description: Amount of units to deliver.
          type: integer
      required:
      - shipSymbol
      - tradeSymbol
      - units
      type: object
    deliver_contract_200_response_data:
      example:
        contract:
          terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        cargo:
          $ref: '#/components/schemas/ShipCargo'
      required:
      - cargo
      - contract
      type: object
    deliver_contract_200_response:
      description: ""
      example:
        data:
          contract:
            terms:
              deliver:
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              payment:
                onFulfilled: 5
                onAccepted: 1
              deadline: 2000-01-23T04:56:07.000+00:00
            factionSymbol: factionSymbol
            fulfilled: false
            accepted: false
            expiration: 2000-01-23T04:56:07.000+00:00
            id: id
            type: PROCUREMENT
            deadlineToAccept: 2000-01-23T04:56:07.000+00:00
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/deliver_contract_200_response_data'
      required:
      - data
      type: object
    fulfill_contract_200_response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          contract:
            terms:
              deliver:
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              payment:
                onFulfilled: 5
                onAccepted: 1
              deadline: 2000-01-23T04:56:07.000+00:00
            factionSymbol: factionSymbol
            fulfilled: false
            accepted: false
            expiration: 2000-01-23T04:56:07.000+00:00
            id: id
            type: PROCUREMENT
            deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/accept_contract_200_response_data'
      required:
      - data
      type: object
    get_my_ships_200_response:
      description: ""
      example:
        data:
        - symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
        - symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
        meta:
          total: 0
          limit: 14
          page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Ship'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    purchase_ship_request:
      properties:
        shipType:
          $ref: '#/components/schemas/ShipType'
        waypointSymbol:
          description: The symbol of the waypoint you want to purchase the ship at.
          type: string
      required:
      - shipType
      - waypointSymbol
      type: object
    purchase_ship_201_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        ship:
          symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
        transaction:
          waypointSymbol: waypointSymbol
          price: 0
          shipType: shipType
          shipSymbol: shipSymbol
          agentSymbol: agentSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        ship:
          $ref: '#/components/schemas/Ship'
        transaction:
          $ref: '#/components/schemas/ShipyardTransaction'
      required:
      - agent
      - ship
      - transaction
      type: object
    purchase_ship_201_response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          ship:
            symbol: symbol
            nav:
              route:
                departureTime: 2000-01-23T04:56:07.000+00:00
                arrival: 2000-01-23T04:56:07.000+00:00
                origin:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
                destination:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
              systemSymbol: systemSymbol
              waypointSymbol: waypointSymbol
              flightMode: null
              status: null
            engine:
              symbol: ENGINE_IMPULSE_DRIVE_I
              condition: 0.9018348186070783
              integrity: 0.6438423552598547
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              speed: 1
            fuel:
              consumed:
                amount: 0
                timestamp: 2000-01-23T04:56:07.000+00:00
              current: 0
              capacity: 0
            reactor:
              symbol: REACTOR_SOLAR_I
              condition: 0.9369310271410669
              integrity: 0.6683562403749608
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              powerOutput: 1
            cooldown:
              remainingSeconds: 0
              totalSeconds: 0
              shipSymbol: shipSymbol
              expiration: 2000-01-23T04:56:07.000+00:00
            mounts:
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            registration:
              role: null
              name: name
              factionSymbol: factionSymbol
            cargo:
              units: 0
              inventory:
              - symbol: null
                name: name
                description: description
                units: 1
              - symbol: null
                name: name
                description: description
                units: 1
              capacity: 0
            modules:
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            crew:
              wages: 0
              current: 3
              rotation: STRICT
              morale: 73
              required: 2
              capacity: 4
            frame:
              symbol: FRAME_PROBE
              condition: 0.10246457001441578
              integrity: 0.14894159098541704
              moduleSlots: 0
              requirements:
                slots: 9
                power: 4
                crew: 5
              fuelCapacity: 0
              name: name
              description: description
              mountingPoints: 0
          transaction:
            waypointSymbol: waypointSymbol
            price: 0
            shipType: shipType
            shipSymbol: shipSymbol
            agentSymbol: agentSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/purchase_ship_201_response_data'
      required:
      - data
      type: object
    get_my_ship_200_response:
      description: ""
      example:
        data:
          symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
      properties:
        data:
          $ref: '#/components/schemas/Ship'
      required:
      - data
      type: object
    get_my_ship_cargo_200_response:
      description: ""
      example:
        data:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/ShipCargo'
      required:
      - data
      type: object
    Orbit_Ship_200_Response_data:
      example:
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
      properties:
        nav:
          $ref: '#/components/schemas/ShipNav'
      required:
      - nav
      type: object
    Orbit_Ship_200_Response:
      description: ""
      example:
        data:
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
      properties:
        data:
          $ref: '#/components/schemas/Orbit_Ship_200_Response_data'
      required:
      - data
      title: Orbit Ship 200 Response
      type: object
    ship_refine_request:
      properties:
        produce:
          description: The type of good to produce out of the refining process.
          enum:
          - IRON
          - COPPER
          - SILVER
          - GOLD
          - ALUMINUM
          - PLATINUM
          - URANITE
          - MERITIUM
          - FUEL
          type: string
      required:
      - produce
      type: object
    Ship_Refine_201_Response_data_produced_inner:
      example:
        tradeSymbol: tradeSymbol
        units: 0
      properties:
        tradeSymbol:
          description: Symbol of the good.
          type: string
        units:
          description: Amount of units of the good.
          type: integer
      required:
      - tradeSymbol
      - units
      type: object
    Ship_Refine_201_Response_data:
      example:
        consumed:
        - tradeSymbol: tradeSymbol
          units: 0
        - tradeSymbol: tradeSymbol
          units: 0
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        produced:
        - tradeSymbol: tradeSymbol
          units: 0
        - tradeSymbol: tradeSymbol
          units: 0
      properties:
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        produced:
          description: Goods that were produced by this refining process.
          items:
            $ref: '#/components/schemas/Ship_Refine_201_Response_data_produced_inner'
          type: array
        consumed:
          description: Goods that were consumed during this refining process.
          items:
            $ref: '#/components/schemas/Ship_Refine_201_Response_data_produced_inner'
          type: array
      required:
      - cargo
      - consumed
      - cooldown
      - produced
      type: object
    Ship_Refine_201_Response:
      example:
        data:
          consumed:
          - tradeSymbol: tradeSymbol
            units: 0
          - tradeSymbol: tradeSymbol
            units: 0
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          produced:
          - tradeSymbol: tradeSymbol
            units: 0
          - tradeSymbol: tradeSymbol
            units: 0
      properties:
        data:
          $ref: '#/components/schemas/Ship_Refine_201_Response_data'
      required:
      - data
      title: Ship Refine 201 Response
      type: object
    create_chart_201_response_data:
      example:
        waypoint:
          symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          orbits: orbits
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          modifiers:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          isUnderConstruction: true
          orbitals:
          - symbol: symbol
          - symbol: symbol
        chart:
          submittedBy: submittedBy
          waypointSymbol: waypointSymbol
          submittedOn: 2000-01-23T04:56:07.000+00:00
      properties:
        chart:
          $ref: '#/components/schemas/Chart'
        waypoint:
          $ref: '#/components/schemas/Waypoint'
      required:
      - chart
      - waypoint
      type: object
    create_chart_201_response:
      example:
        data:
          waypoint:
            symbol: symbol
            traits:
            - symbol: null
              name: name
              description: description
            - symbol: null
              name: name
              description: description
            systemSymbol: systemSymbol
            orbits: orbits
            faction:
              symbol: null
            x: 0
            "y": 6
            type: null
            modifiers:
            - symbol: null
              name: name
              description: description
            - symbol: null
              name: name
              description: description
            chart:
              submittedBy: submittedBy
              waypointSymbol: waypointSymbol
              submittedOn: 2000-01-23T04:56:07.000+00:00
            isUnderConstruction: true
            orbitals:
            - symbol: symbol
            - symbol: symbol
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/create_chart_201_response_data'
      required:
      - data
      type: object
    get_ship_cooldown_200_response:
      description: ""
      example:
        data:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Cooldown'
      required:
      - data
      type: object
    Dock_Ship_200_Response:
      description: ""
      example:
        data:
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
      properties:
        data:
          $ref: '#/components/schemas/Orbit_Ship_200_Response_data'
      required:
      - data
      title: Dock Ship 200 Response
      type: object
    create_survey_201_response_data:
      example:
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        surveys:
        - symbol: symbol
          size: SMALL
          signature: signature
          expiration: 2000-01-23T04:56:07.000+00:00
          deposits:
          - symbol: symbol
          - symbol: symbol
        - symbol: symbol
          size: SMALL
          signature: signature
          expiration: 2000-01-23T04:56:07.000+00:00
          deposits:
          - symbol: symbol
          - symbol: symbol
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        surveys:
          description: Surveys created by this action.
          items:
            $ref: '#/components/schemas/Survey'
          type: array
      required:
      - cooldown
      - surveys
      type: object
    create_survey_201_response:
      example:
        data:
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          surveys:
          - symbol: symbol
            size: SMALL
            signature: signature
            expiration: 2000-01-23T04:56:07.000+00:00
            deposits:
            - symbol: symbol
            - symbol: symbol
          - symbol: symbol
            size: SMALL
            signature: signature
            expiration: 2000-01-23T04:56:07.000+00:00
            deposits:
            - symbol: symbol
            - symbol: symbol
      properties:
        data:
          $ref: '#/components/schemas/create_survey_201_response_data'
      required:
      - data
      type: object
    extract_resources_request:
      properties:
        survey:
          $ref: '#/components/schemas/Survey'
      type: object
    extract_resources_201_response_data_events_inner:
      oneOf:
      - $ref: '#/components/schemas/ShipConditionEvent'
    extract_resources_201_response_data:
      example:
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        extraction:
          yield:
            symbol: null
            units: 0
          shipSymbol: shipSymbol
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        events:
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        extraction:
          $ref: '#/components/schemas/Extraction'
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        events:
          items:
            $ref: '#/components/schemas/extract_resources_201_response_data_events_inner'
          type: array
      required:
      - cargo
      - cooldown
      - events
      - extraction
      type: object
    extract_resources_201_response:
      description: ""
      example:
        data:
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          extraction:
            yield:
              symbol: null
              units: 0
            shipSymbol: shipSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          events:
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
      properties:
        data:
          $ref: '#/components/schemas/extract_resources_201_response_data'
      required:
      - data
      type: object
    siphon_resources_201_response_data:
      example:
        siphon:
          yield:
            symbol: null
            units: 0
          shipSymbol: shipSymbol
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        events:
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        siphon:
          $ref: '#/components/schemas/Siphon'
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        events:
          items:
            $ref: '#/components/schemas/extract_resources_201_response_data_events_inner'
          type: array
      required:
      - cargo
      - cooldown
      - events
      - siphon
      type: object
    siphon_resources_201_response:
      description: ""
      example:
        data:
          siphon:
            yield:
              symbol: null
              units: 0
            shipSymbol: shipSymbol
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          events:
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
      properties:
        data:
          $ref: '#/components/schemas/siphon_resources_201_response_data'
      required:
      - data
      type: object
    jettison_request:
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: Amount of units to jettison of this good.
          minimum: 1
          type: integer
      required:
      - symbol
      - units
      type: object
    jettison_200_response_data:
      example:
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
      properties:
        cargo:
          $ref: '#/components/schemas/ShipCargo'
      required:
      - cargo
      type: object
    jettison_200_response:
      description: ""
      example:
        data:
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/jettison_200_response_data'
      required:
      - data
      type: object
    jump_ship_request:
      properties:
        waypointSymbol:
          description: The symbol of the waypoint to jump to. The destination must
            be a connected waypoint.
          type: string
      required:
      - waypointSymbol
      type: object
    jump_ship_200_response_data:
      example:
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        transaction:
          tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          units: 0
          type: PURCHASE
          pricePerUnit: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        nav:
          $ref: '#/components/schemas/ShipNav'
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        transaction:
          $ref: '#/components/schemas/MarketTransaction'
        agent:
          $ref: '#/components/schemas/Agent'
      required:
      - agent
      - cooldown
      - nav
      - transaction
      type: object
    jump_ship_200_response:
      description: ""
      example:
        data:
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/jump_ship_200_response_data'
      required:
      - data
      type: object
    navigate_ship_request:
      properties:
        waypointSymbol:
          description: The target destination.
          type: string
      required:
      - waypointSymbol
      type: object
    navigate_ship_200_response_data:
      example:
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
        fuel:
          consumed:
            amount: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
          current: 0
          capacity: 0
        events:
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
        - symbol: REACTOR_OVERLOAD
          component: FRAME
          name: name
          description: description
      properties:
        fuel:
          $ref: '#/components/schemas/ShipFuel'
        nav:
          $ref: '#/components/schemas/ShipNav'
        events:
          items:
            $ref: '#/components/schemas/extract_resources_201_response_data_events_inner'
          type: array
      required:
      - events
      - fuel
      - nav
      type: object
    navigate_ship_200_response:
      description: ""
      example:
        data:
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          events:
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
          - symbol: REACTOR_OVERLOAD
            component: FRAME
            name: name
            description: description
      properties:
        data:
          $ref: '#/components/schemas/navigate_ship_200_response_data'
      required:
      - data
      type: object
    get_ship_nav_200_response:
      description: ""
      example:
        data:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
      properties:
        data:
          $ref: '#/components/schemas/ShipNav'
      required:
      - data
      type: object
    patch_ship_nav_request:
      properties:
        flightMode:
          $ref: '#/components/schemas/ShipNavFlightMode'
      type: object
    warp_ship_200_response_data:
      example:
        nav:
          route:
            departureTime: 2000-01-23T04:56:07.000+00:00
            arrival: 2000-01-23T04:56:07.000+00:00
            origin:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
            destination:
              symbol: symbol
              systemSymbol: systemSymbol
              x: 7
              "y": 9
              type: null
          systemSymbol: systemSymbol
          waypointSymbol: waypointSymbol
          flightMode: null
          status: null
        fuel:
          consumed:
            amount: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
          current: 0
          capacity: 0
      properties:
        fuel:
          $ref: '#/components/schemas/ShipFuel'
        nav:
          $ref: '#/components/schemas/ShipNav'
      required:
      - fuel
      - nav
      type: object
    warp_ship_200_response:
      description: ""
      example:
        data:
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/warp_ship_200_response_data'
      required:
      - data
      type: object
    SellCargoRequest:
      example:
        symbol: null
        units: 0
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: Amounts of units to sell of the selected good.
          type: integer
      required:
      - symbol
      - units
      title: SellCargoRequest
      type: object
    Sell_Cargo_201_Response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        transaction:
          tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          units: 0
          type: PURCHASE
          pricePerUnit: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        transaction:
          $ref: '#/components/schemas/MarketTransaction'
      required:
      - agent
      - cargo
      - transaction
      type: object
    Sell_Cargo_201_Response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Sell_Cargo_201_Response_data'
      required:
      - data
      title: Sell Cargo 201 Response
      type: object
    create_ship_system_scan_201_response_data:
      example:
        systems:
        - symbol: symbol
          distance: 1
          sectorSymbol: sectorSymbol
          x: 0
          "y": 6
          type: null
        - symbol: symbol
          distance: 1
          sectorSymbol: sectorSymbol
          x: 0
          "y": 6
          type: null
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        systems:
          description: List of scanned systems.
          items:
            $ref: '#/components/schemas/ScannedSystem'
          type: array
      required:
      - cooldown
      - systems
      type: object
    create_ship_system_scan_201_response:
      example:
        data:
          systems:
          - symbol: symbol
            distance: 1
            sectorSymbol: sectorSymbol
            x: 0
            "y": 6
            type: null
          - symbol: symbol
            distance: 1
            sectorSymbol: sectorSymbol
            x: 0
            "y": 6
            type: null
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/create_ship_system_scan_201_response_data'
      required:
      - data
      type: object
    create_ship_waypoint_scan_201_response_data:
      example:
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
        waypoints:
        - symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          orbitals:
          - symbol: symbol
          - symbol: symbol
        - symbol: symbol
          traits:
          - symbol: null
            name: name
            description: description
          - symbol: null
            name: name
            description: description
          systemSymbol: systemSymbol
          faction:
            symbol: null
          x: 0
          "y": 6
          type: null
          chart:
            submittedBy: submittedBy
            waypointSymbol: waypointSymbol
            submittedOn: 2000-01-23T04:56:07.000+00:00
          orbitals:
          - symbol: symbol
          - symbol: symbol
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        waypoints:
          description: List of scanned waypoints.
          items:
            $ref: '#/components/schemas/ScannedWaypoint'
          type: array
      required:
      - cooldown
      - waypoints
      type: object
    create_ship_waypoint_scan_201_response:
      example:
        data:
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          waypoints:
          - symbol: symbol
            traits:
            - symbol: null
              name: name
              description: description
            - symbol: null
              name: name
              description: description
            systemSymbol: systemSymbol
            faction:
              symbol: null
            x: 0
            "y": 6
            type: null
            chart:
              submittedBy: submittedBy
              waypointSymbol: waypointSymbol
              submittedOn: 2000-01-23T04:56:07.000+00:00
            orbitals:
            - symbol: symbol
            - symbol: symbol
          - symbol: symbol
            traits:
            - symbol: null
              name: name
              description: description
            - symbol: null
              name: name
              description: description
            systemSymbol: systemSymbol
            faction:
              symbol: null
            x: 0
            "y": 6
            type: null
            chart:
              submittedBy: submittedBy
              waypointSymbol: waypointSymbol
              submittedOn: 2000-01-23T04:56:07.000+00:00
            orbitals:
            - symbol: symbol
            - symbol: symbol
      properties:
        data:
          $ref: '#/components/schemas/create_ship_waypoint_scan_201_response_data'
      required:
      - data
      type: object
    create_ship_ship_scan_201_response_data:
      example:
        ships:
        - symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: symbol
          reactor:
            symbol: symbol
          mounts:
          - symbol: symbol
          - symbol: symbol
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          frame:
            symbol: symbol
        - symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: symbol
          reactor:
            symbol: symbol
          mounts:
          - symbol: symbol
          - symbol: symbol
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          frame:
            symbol: symbol
        cooldown:
          remainingSeconds: 0
          totalSeconds: 0
          shipSymbol: shipSymbol
          expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        cooldown:
          $ref: '#/components/schemas/Cooldown'
        ships:
          description: List of scanned ships.
          items:
            $ref: '#/components/schemas/ScannedShip'
          type: array
      required:
      - cooldown
      - ships
      type: object
    create_ship_ship_scan_201_response:
      example:
        data:
          ships:
          - symbol: symbol
            nav:
              route:
                departureTime: 2000-01-23T04:56:07.000+00:00
                arrival: 2000-01-23T04:56:07.000+00:00
                origin:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
                destination:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
              systemSymbol: systemSymbol
              waypointSymbol: waypointSymbol
              flightMode: null
              status: null
            engine:
              symbol: symbol
            reactor:
              symbol: symbol
            mounts:
            - symbol: symbol
            - symbol: symbol
            registration:
              role: null
              name: name
              factionSymbol: factionSymbol
            frame:
              symbol: symbol
          - symbol: symbol
            nav:
              route:
                departureTime: 2000-01-23T04:56:07.000+00:00
                arrival: 2000-01-23T04:56:07.000+00:00
                origin:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
                destination:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
              systemSymbol: systemSymbol
              waypointSymbol: waypointSymbol
              flightMode: null
              status: null
            engine:
              symbol: symbol
            reactor:
              symbol: symbol
            mounts:
            - symbol: symbol
            - symbol: symbol
            registration:
              role: null
              name: name
              factionSymbol: factionSymbol
            frame:
              symbol: symbol
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/create_ship_ship_scan_201_response_data'
      required:
      - data
      type: object
    refuel_ship_request:
      properties:
        units:
          description: "The amount of fuel to fill in the ship's tanks. When not specified,\
            \ the ship will be refueled to its maximum fuel capacity. If the amount\
            \ specified is greater than the ship's remaining capacity, the ship will\
            \ only be refueled to its maximum fuel capacity. The amount specified\
            \ is not in market units but in ship fuel units."
          example: 100
          minimum: 1
          type: integer
        fromCargo:
          description: "Wether to use the FUEL thats in your cargo or not. Default:\
            \ false"
          example: false
          type: boolean
      type: object
    refuel_ship_200_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        fuel:
          consumed:
            amount: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
          current: 0
          capacity: 0
        transaction:
          tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          units: 0
          type: PURCHASE
          pricePerUnit: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        fuel:
          $ref: '#/components/schemas/ShipFuel'
        transaction:
          $ref: '#/components/schemas/MarketTransaction'
      required:
      - agent
      - fuel
      - transaction
      type: object
    refuel_ship_200_response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/refuel_ship_200_response_data'
      required:
      - data
      type: object
    Purchase_Cargo_Request:
      properties:
        symbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: Amounts of units to purchase.
          type: integer
      required:
      - symbol
      - units
      title: Purchase Cargo Request
      type: object
    Purchase_Cargo_201_Response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            units: 0
            type: PURCHASE
            pricePerUnit: 0
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Sell_Cargo_201_Response_data'
      required:
      - data
      title: Purchase Cargo 201 Response
      type: object
    Transfer_Cargo_Request:
      properties:
        tradeSymbol:
          $ref: '#/components/schemas/TradeSymbol'
        units:
          description: Amount of units to transfer.
          type: integer
        shipSymbol:
          description: The symbol of the ship to transfer to.
          type: string
      required:
      - shipSymbol
      - tradeSymbol
      - units
      title: Transfer Cargo Request
      type: object
    Transfer_Cargo_200_Response:
      example:
        data:
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
      properties:
        data:
          $ref: '#/components/schemas/jettison_200_response_data'
      required:
      - data
      title: Transfer Cargo 200 Response
      type: object
    Negotiate_Contract_200_Response_data:
      example:
        contract:
          terms:
            deliver:
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            - tradeSymbol: tradeSymbol
              unitsRequired: 5
              destinationSymbol: destinationSymbol
              unitsFulfilled: 2
            payment:
              onFulfilled: 5
              onAccepted: 1
            deadline: 2000-01-23T04:56:07.000+00:00
          factionSymbol: factionSymbol
          fulfilled: false
          accepted: false
          expiration: 2000-01-23T04:56:07.000+00:00
          id: id
          type: PROCUREMENT
          deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
      required:
      - contract
      type: object
    Negotiate_Contract_200_Response:
      description: ""
      example:
        data:
          contract:
            terms:
              deliver:
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              - tradeSymbol: tradeSymbol
                unitsRequired: 5
                destinationSymbol: destinationSymbol
                unitsFulfilled: 2
              payment:
                onFulfilled: 5
                onAccepted: 1
              deadline: 2000-01-23T04:56:07.000+00:00
            factionSymbol: factionSymbol
            fulfilled: false
            accepted: false
            expiration: 2000-01-23T04:56:07.000+00:00
            id: id
            type: PROCUREMENT
            deadlineToAccept: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Negotiate_Contract_200_Response_data'
      required:
      - data
      title: Negotiate Contract 200 Response
      type: object
    Get_Mounts_200_Response:
      description: ""
      example:
        data:
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
      properties:
        data:
          items:
            $ref: '#/components/schemas/ShipMount'
          type: array
      required:
      - data
      title: Get Mounts 200 Response
      type: object
    Install_Mount_Request:
      properties:
        symbol:
          type: string
      required:
      - symbol
      title: Install Mount Request
      type: object
    Install_Mount_201_Response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        mounts:
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        transaction:
          tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        mounts:
          description: List of installed mounts after the installation of the new
            mount.
          items:
            $ref: '#/components/schemas/ShipMount'
          type: array
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        transaction:
          $ref: '#/components/schemas/ShipModificationTransaction'
      required:
      - agent
      - cargo
      - mounts
      - transaction
      type: object
    Install_Mount_201_Response:
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Install_Mount_201_Response_data'
      required:
      - data
      title: Install Mount 201 Response
      type: object
    Remove_Mount_Request:
      properties:
        symbol:
          description: The symbol of the mount to remove.
          type: string
      required:
      - symbol
      title: Remove Mount Request
      type: object
    Remove_Mount_201_Response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        mounts:
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        - symbol: MOUNT_GAS_SIPHON_I
          requirements:
            slots: 9
            power: 4
            crew: 5
          strength: 0
          name: name
          description: description
          deposits:
          - QUARTZ_SAND
          - QUARTZ_SAND
        cargo:
          units: 0
          inventory:
          - symbol: null
            name: name
            description: description
            units: 1
          - symbol: null
            name: name
            description: description
            units: 1
          capacity: 0
        transaction:
          tradeSymbol: tradeSymbol
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        mounts:
          description: List of installed mounts after the removal of the selected
            mount.
          items:
            $ref: '#/components/schemas/ShipMount'
          type: array
        cargo:
          $ref: '#/components/schemas/ShipCargo'
        transaction:
          $ref: '#/components/schemas/ShipModificationTransaction'
      required:
      - agent
      - cargo
      - mounts
      - transaction
      type: object
    Remove_Mount_201_Response:
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          transaction:
            tradeSymbol: tradeSymbol
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Remove_Mount_201_Response_data'
      required:
      - data
      title: Remove Mount 201 Response
      type: object
    get_scrap_ship_200_response_data:
      example:
        transaction:
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        transaction:
          $ref: '#/components/schemas/ScrapTransaction'
      required:
      - transaction
      type: object
    get_scrap_ship_200_response:
      description: ""
      example:
        data:
          transaction:
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/get_scrap_ship_200_response_data'
      required:
      - data
      type: object
    scrap_ship_200_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        transaction:
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        transaction:
          $ref: '#/components/schemas/ScrapTransaction'
      required:
      - agent
      - transaction
      type: object
    scrap_ship_200_response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          transaction:
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/scrap_ship_200_response_data'
      required:
      - data
      type: object
    get_repair_ship_200_response_data:
      example:
        transaction:
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        transaction:
          $ref: '#/components/schemas/RepairTransaction'
      required:
      - transaction
      type: object
    get_repair_ship_200_response:
      description: ""
      example:
        data:
          transaction:
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/get_repair_ship_200_response_data'
      required:
      - data
      type: object
    repair_ship_200_response_data:
      example:
        agent:
          accountId: accountId
          symbol: symbol
          headquarters: headquarters
          credits: 0
          startingFaction: startingFaction
          shipCount: 6
        ship:
          symbol: symbol
          nav:
            route:
              departureTime: 2000-01-23T04:56:07.000+00:00
              arrival: 2000-01-23T04:56:07.000+00:00
              origin:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
              destination:
                symbol: symbol
                systemSymbol: systemSymbol
                x: 7
                "y": 9
                type: null
            systemSymbol: systemSymbol
            waypointSymbol: waypointSymbol
            flightMode: null
            status: null
          engine:
            symbol: ENGINE_IMPULSE_DRIVE_I
            condition: 0.9018348186070783
            integrity: 0.6438423552598547
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            speed: 1
          fuel:
            consumed:
              amount: 0
              timestamp: 2000-01-23T04:56:07.000+00:00
            current: 0
            capacity: 0
          reactor:
            symbol: REACTOR_SOLAR_I
            condition: 0.9369310271410669
            integrity: 0.6683562403749608
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            description: description
            powerOutput: 1
          cooldown:
            remainingSeconds: 0
            totalSeconds: 0
            shipSymbol: shipSymbol
            expiration: 2000-01-23T04:56:07.000+00:00
          mounts:
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          - symbol: MOUNT_GAS_SIPHON_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            strength: 0
            name: name
            description: description
            deposits:
            - QUARTZ_SAND
            - QUARTZ_SAND
          registration:
            role: null
            name: name
            factionSymbol: factionSymbol
          cargo:
            units: 0
            inventory:
            - symbol: null
              name: name
              description: description
              units: 1
            - symbol: null
              name: name
              description: description
              units: 1
            capacity: 0
          modules:
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          - symbol: MODULE_MINERAL_PROCESSOR_I
            requirements:
              slots: 9
              power: 4
              crew: 5
            name: name
            range: 0
            description: description
            capacity: 0
          crew:
            wages: 0
            current: 3
            rotation: STRICT
            morale: 73
            required: 2
            capacity: 4
          frame:
            symbol: FRAME_PROBE
            condition: 0.10246457001441578
            integrity: 0.14894159098541704
            moduleSlots: 0
            requirements:
              slots: 9
              power: 4
              crew: 5
            fuelCapacity: 0
            name: name
            description: description
            mountingPoints: 0
        transaction:
          totalPrice: 0
          waypointSymbol: waypointSymbol
          shipSymbol: shipSymbol
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        ship:
          $ref: '#/components/schemas/Ship'
        transaction:
          $ref: '#/components/schemas/RepairTransaction'
      required:
      - agent
      - ship
      - transaction
      type: object
    repair_ship_200_response:
      description: ""
      example:
        data:
          agent:
            accountId: accountId
            symbol: symbol
            headquarters: headquarters
            credits: 0
            startingFaction: startingFaction
            shipCount: 6
          ship:
            symbol: symbol
            nav:
              route:
                departureTime: 2000-01-23T04:56:07.000+00:00
                arrival: 2000-01-23T04:56:07.000+00:00
                origin:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
                destination:
                  symbol: symbol
                  systemSymbol: systemSymbol
                  x: 7
                  "y": 9
                  type: null
              systemSymbol: systemSymbol
              waypointSymbol: waypointSymbol
              flightMode: null
              status: null
            engine:
              symbol: ENGINE_IMPULSE_DRIVE_I
              condition: 0.9018348186070783
              integrity: 0.6438423552598547
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              speed: 1
            fuel:
              consumed:
                amount: 0
                timestamp: 2000-01-23T04:56:07.000+00:00
              current: 0
              capacity: 0
            reactor:
              symbol: REACTOR_SOLAR_I
              condition: 0.9369310271410669
              integrity: 0.6683562403749608
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              description: description
              powerOutput: 1
            cooldown:
              remainingSeconds: 0
              totalSeconds: 0
              shipSymbol: shipSymbol
              expiration: 2000-01-23T04:56:07.000+00:00
            mounts:
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            - symbol: MOUNT_GAS_SIPHON_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              strength: 0
              name: name
              description: description
              deposits:
              - QUARTZ_SAND
              - QUARTZ_SAND
            registration:
              role: null
              name: name
              factionSymbol: factionSymbol
            cargo:
              units: 0
              inventory:
              - symbol: null
                name: name
                description: description
                units: 1
              - symbol: null
                name: name
                description: description
                units: 1
              capacity: 0
            modules:
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            - symbol: MODULE_MINERAL_PROCESSOR_I
              requirements:
                slots: 9
                power: 4
                crew: 5
              name: name
              range: 0
              description: description
              capacity: 0
            crew:
              wages: 0
              current: 3
              rotation: STRICT
              morale: 73
              required: 2
              capacity: 4
            frame:
              symbol: FRAME_PROBE
              condition: 0.10246457001441578
              integrity: 0.14894159098541704
              moduleSlots: 0
              requirements:
                slots: 9
                power: 4
                crew: 5
              fuelCapacity: 0
              name: name
              description: description
              mountingPoints: 0
          transaction:
            totalPrice: 0
            waypointSymbol: waypointSymbol
            shipSymbol: shipSymbol
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/repair_ship_200_response_data'
      required:
      - data
      type: object
    ScannedShip_frame:
      description: The frame of the ship.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the frame.
          type: string
      required:
      - symbol
      type: object
    ScannedShip_reactor:
      description: The reactor of the ship.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the reactor.
          type: string
      required:
      - symbol
      type: object
    ScannedShip_engine:
      description: The engine of the ship.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the engine.
          type: string
      required:
      - symbol
      type: object
    ScannedShip_mounts_inner:
      description: A mount on the ship.
      example:
        symbol: symbol
      properties:
        symbol:
          description: The symbol of the mount.
          type: string
      required:
      - symbol
      type: object
    ShipFuel_consumed:
      description: An object that only shows up when an action has consumed fuel in
        the process. Shows the fuel consumption data.
      example:
        amount: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        amount:
          description: The amount of fuel consumed by the most recent transit or action.
          minimum: 0
          type: integer
        timestamp:
          description: The time at which the fuel was consumed.
          format: date-time
          type: string
      required:
      - amount
      - timestamp
      type: object
    Shipyard_shipTypes_inner:
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/ShipType'
      required:
      - type
      type: object
    ShipyardShip_crew:
      example:
        required: 1
        capacity: 5
      properties:
        required:
          type: integer
        capacity:
          type: integer
      required:
      - capacity
      - required
      type: object
  securitySchemes:
    AgentToken:
      description: When you register a new agent you will be granted a private bearer
        token which grants authorization to use the API.
      scheme: bearer
      type: http
