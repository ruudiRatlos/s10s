/*
SpaceTraders API

SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   

API version: 2.0.0
Contact: joel@spacetraders.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// WaypointTraitSymbol The unique identifier of the trait.
type WaypointTraitSymbol string

// List of WaypointTraitSymbol
const (
	WAYPOINTTRAITSYMBOL_UNCHARTED WaypointTraitSymbol = "UNCHARTED"
	WAYPOINTTRAITSYMBOL_UNDER_CONSTRUCTION WaypointTraitSymbol = "UNDER_CONSTRUCTION"
	WAYPOINTTRAITSYMBOL_MARKETPLACE WaypointTraitSymbol = "MARKETPLACE"
	WAYPOINTTRAITSYMBOL_SHIPYARD WaypointTraitSymbol = "SHIPYARD"
	WAYPOINTTRAITSYMBOL_OUTPOST WaypointTraitSymbol = "OUTPOST"
	WAYPOINTTRAITSYMBOL_SCATTERED_SETTLEMENTS WaypointTraitSymbol = "SCATTERED_SETTLEMENTS"
	WAYPOINTTRAITSYMBOL_SPRAWLING_CITIES WaypointTraitSymbol = "SPRAWLING_CITIES"
	WAYPOINTTRAITSYMBOL_MEGA_STRUCTURES WaypointTraitSymbol = "MEGA_STRUCTURES"
	WAYPOINTTRAITSYMBOL_PIRATE_BASE WaypointTraitSymbol = "PIRATE_BASE"
	WAYPOINTTRAITSYMBOL_OVERCROWDED WaypointTraitSymbol = "OVERCROWDED"
	WAYPOINTTRAITSYMBOL_HIGH_TECH WaypointTraitSymbol = "HIGH_TECH"
	WAYPOINTTRAITSYMBOL_CORRUPT WaypointTraitSymbol = "CORRUPT"
	WAYPOINTTRAITSYMBOL_BUREAUCRATIC WaypointTraitSymbol = "BUREAUCRATIC"
	WAYPOINTTRAITSYMBOL_TRADING_HUB WaypointTraitSymbol = "TRADING_HUB"
	WAYPOINTTRAITSYMBOL_INDUSTRIAL WaypointTraitSymbol = "INDUSTRIAL"
	WAYPOINTTRAITSYMBOL_BLACK_MARKET WaypointTraitSymbol = "BLACK_MARKET"
	WAYPOINTTRAITSYMBOL_RESEARCH_FACILITY WaypointTraitSymbol = "RESEARCH_FACILITY"
	WAYPOINTTRAITSYMBOL_MILITARY_BASE WaypointTraitSymbol = "MILITARY_BASE"
	WAYPOINTTRAITSYMBOL_SURVEILLANCE_OUTPOST WaypointTraitSymbol = "SURVEILLANCE_OUTPOST"
	WAYPOINTTRAITSYMBOL_EXPLORATION_OUTPOST WaypointTraitSymbol = "EXPLORATION_OUTPOST"
	WAYPOINTTRAITSYMBOL_MINERAL_DEPOSITS WaypointTraitSymbol = "MINERAL_DEPOSITS"
	WAYPOINTTRAITSYMBOL_COMMON_METAL_DEPOSITS WaypointTraitSymbol = "COMMON_METAL_DEPOSITS"
	WAYPOINTTRAITSYMBOL_PRECIOUS_METAL_DEPOSITS WaypointTraitSymbol = "PRECIOUS_METAL_DEPOSITS"
	WAYPOINTTRAITSYMBOL_RARE_METAL_DEPOSITS WaypointTraitSymbol = "RARE_METAL_DEPOSITS"
	WAYPOINTTRAITSYMBOL_METHANE_POOLS WaypointTraitSymbol = "METHANE_POOLS"
	WAYPOINTTRAITSYMBOL_ICE_CRYSTALS WaypointTraitSymbol = "ICE_CRYSTALS"
	WAYPOINTTRAITSYMBOL_EXPLOSIVE_GASES WaypointTraitSymbol = "EXPLOSIVE_GASES"
	WAYPOINTTRAITSYMBOL_STRONG_MAGNETOSPHERE WaypointTraitSymbol = "STRONG_MAGNETOSPHERE"
	WAYPOINTTRAITSYMBOL_VIBRANT_AURORAS WaypointTraitSymbol = "VIBRANT_AURORAS"
	WAYPOINTTRAITSYMBOL_SALT_FLATS WaypointTraitSymbol = "SALT_FLATS"
	WAYPOINTTRAITSYMBOL_CANYONS WaypointTraitSymbol = "CANYONS"
	WAYPOINTTRAITSYMBOL_PERPETUAL_DAYLIGHT WaypointTraitSymbol = "PERPETUAL_DAYLIGHT"
	WAYPOINTTRAITSYMBOL_PERPETUAL_OVERCAST WaypointTraitSymbol = "PERPETUAL_OVERCAST"
	WAYPOINTTRAITSYMBOL_DRY_SEABEDS WaypointTraitSymbol = "DRY_SEABEDS"
	WAYPOINTTRAITSYMBOL_MAGMA_SEAS WaypointTraitSymbol = "MAGMA_SEAS"
	WAYPOINTTRAITSYMBOL_SUPERVOLCANOES WaypointTraitSymbol = "SUPERVOLCANOES"
	WAYPOINTTRAITSYMBOL_ASH_CLOUDS WaypointTraitSymbol = "ASH_CLOUDS"
	WAYPOINTTRAITSYMBOL_VAST_RUINS WaypointTraitSymbol = "VAST_RUINS"
	WAYPOINTTRAITSYMBOL_MUTATED_FLORA WaypointTraitSymbol = "MUTATED_FLORA"
	WAYPOINTTRAITSYMBOL_TERRAFORMED WaypointTraitSymbol = "TERRAFORMED"
	WAYPOINTTRAITSYMBOL_EXTREME_TEMPERATURES WaypointTraitSymbol = "EXTREME_TEMPERATURES"
	WAYPOINTTRAITSYMBOL_EXTREME_PRESSURE WaypointTraitSymbol = "EXTREME_PRESSURE"
	WAYPOINTTRAITSYMBOL_DIVERSE_LIFE WaypointTraitSymbol = "DIVERSE_LIFE"
	WAYPOINTTRAITSYMBOL_SCARCE_LIFE WaypointTraitSymbol = "SCARCE_LIFE"
	WAYPOINTTRAITSYMBOL_FOSSILS WaypointTraitSymbol = "FOSSILS"
	WAYPOINTTRAITSYMBOL_WEAK_GRAVITY WaypointTraitSymbol = "WEAK_GRAVITY"
	WAYPOINTTRAITSYMBOL_STRONG_GRAVITY WaypointTraitSymbol = "STRONG_GRAVITY"
	WAYPOINTTRAITSYMBOL_CRUSHING_GRAVITY WaypointTraitSymbol = "CRUSHING_GRAVITY"
	WAYPOINTTRAITSYMBOL_TOXIC_ATMOSPHERE WaypointTraitSymbol = "TOXIC_ATMOSPHERE"
	WAYPOINTTRAITSYMBOL_CORROSIVE_ATMOSPHERE WaypointTraitSymbol = "CORROSIVE_ATMOSPHERE"
	WAYPOINTTRAITSYMBOL_BREATHABLE_ATMOSPHERE WaypointTraitSymbol = "BREATHABLE_ATMOSPHERE"
	WAYPOINTTRAITSYMBOL_THIN_ATMOSPHERE WaypointTraitSymbol = "THIN_ATMOSPHERE"
	WAYPOINTTRAITSYMBOL_JOVIAN WaypointTraitSymbol = "JOVIAN"
	WAYPOINTTRAITSYMBOL_ROCKY WaypointTraitSymbol = "ROCKY"
	WAYPOINTTRAITSYMBOL_VOLCANIC WaypointTraitSymbol = "VOLCANIC"
	WAYPOINTTRAITSYMBOL_FROZEN WaypointTraitSymbol = "FROZEN"
	WAYPOINTTRAITSYMBOL_SWAMP WaypointTraitSymbol = "SWAMP"
	WAYPOINTTRAITSYMBOL_BARREN WaypointTraitSymbol = "BARREN"
	WAYPOINTTRAITSYMBOL_TEMPERATE WaypointTraitSymbol = "TEMPERATE"
	WAYPOINTTRAITSYMBOL_JUNGLE WaypointTraitSymbol = "JUNGLE"
	WAYPOINTTRAITSYMBOL_OCEAN WaypointTraitSymbol = "OCEAN"
	WAYPOINTTRAITSYMBOL_RADIOACTIVE WaypointTraitSymbol = "RADIOACTIVE"
	WAYPOINTTRAITSYMBOL_MICRO_GRAVITY_ANOMALIES WaypointTraitSymbol = "MICRO_GRAVITY_ANOMALIES"
	WAYPOINTTRAITSYMBOL_DEBRIS_CLUSTER WaypointTraitSymbol = "DEBRIS_CLUSTER"
	WAYPOINTTRAITSYMBOL_DEEP_CRATERS WaypointTraitSymbol = "DEEP_CRATERS"
	WAYPOINTTRAITSYMBOL_SHALLOW_CRATERS WaypointTraitSymbol = "SHALLOW_CRATERS"
	WAYPOINTTRAITSYMBOL_UNSTABLE_COMPOSITION WaypointTraitSymbol = "UNSTABLE_COMPOSITION"
	WAYPOINTTRAITSYMBOL_HOLLOWED_INTERIOR WaypointTraitSymbol = "HOLLOWED_INTERIOR"
	WAYPOINTTRAITSYMBOL_STRIPPED WaypointTraitSymbol = "STRIPPED"
)

// All allowed values of WaypointTraitSymbol enum
var AllowedWaypointTraitSymbolEnumValues = []WaypointTraitSymbol{
	"UNCHARTED",
	"UNDER_CONSTRUCTION",
	"MARKETPLACE",
	"SHIPYARD",
	"OUTPOST",
	"SCATTERED_SETTLEMENTS",
	"SPRAWLING_CITIES",
	"MEGA_STRUCTURES",
	"PIRATE_BASE",
	"OVERCROWDED",
	"HIGH_TECH",
	"CORRUPT",
	"BUREAUCRATIC",
	"TRADING_HUB",
	"INDUSTRIAL",
	"BLACK_MARKET",
	"RESEARCH_FACILITY",
	"MILITARY_BASE",
	"SURVEILLANCE_OUTPOST",
	"EXPLORATION_OUTPOST",
	"MINERAL_DEPOSITS",
	"COMMON_METAL_DEPOSITS",
	"PRECIOUS_METAL_DEPOSITS",
	"RARE_METAL_DEPOSITS",
	"METHANE_POOLS",
	"ICE_CRYSTALS",
	"EXPLOSIVE_GASES",
	"STRONG_MAGNETOSPHERE",
	"VIBRANT_AURORAS",
	"SALT_FLATS",
	"CANYONS",
	"PERPETUAL_DAYLIGHT",
	"PERPETUAL_OVERCAST",
	"DRY_SEABEDS",
	"MAGMA_SEAS",
	"SUPERVOLCANOES",
	"ASH_CLOUDS",
	"VAST_RUINS",
	"MUTATED_FLORA",
	"TERRAFORMED",
	"EXTREME_TEMPERATURES",
	"EXTREME_PRESSURE",
	"DIVERSE_LIFE",
	"SCARCE_LIFE",
	"FOSSILS",
	"WEAK_GRAVITY",
	"STRONG_GRAVITY",
	"CRUSHING_GRAVITY",
	"TOXIC_ATMOSPHERE",
	"CORROSIVE_ATMOSPHERE",
	"BREATHABLE_ATMOSPHERE",
	"THIN_ATMOSPHERE",
	"JOVIAN",
	"ROCKY",
	"VOLCANIC",
	"FROZEN",
	"SWAMP",
	"BARREN",
	"TEMPERATE",
	"JUNGLE",
	"OCEAN",
	"RADIOACTIVE",
	"MICRO_GRAVITY_ANOMALIES",
	"DEBRIS_CLUSTER",
	"DEEP_CRATERS",
	"SHALLOW_CRATERS",
	"UNSTABLE_COMPOSITION",
	"HOLLOWED_INTERIOR",
	"STRIPPED",
}

func (v *WaypointTraitSymbol) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WaypointTraitSymbol(value)
	for _, existing := range AllowedWaypointTraitSymbolEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WaypointTraitSymbol", value)
}

// NewWaypointTraitSymbolFromValue returns a pointer to a valid WaypointTraitSymbol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWaypointTraitSymbolFromValue(v string) (*WaypointTraitSymbol, error) {
	ev := WaypointTraitSymbol(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WaypointTraitSymbol: valid values are %v", v, AllowedWaypointTraitSymbolEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WaypointTraitSymbol) IsValid() bool {
	for _, existing := range AllowedWaypointTraitSymbolEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WaypointTraitSymbol value
func (v WaypointTraitSymbol) Ptr() *WaypointTraitSymbol {
	return &v
}

type NullableWaypointTraitSymbol struct {
	value *WaypointTraitSymbol
	isSet bool
}

func (v NullableWaypointTraitSymbol) Get() *WaypointTraitSymbol {
	return v.value
}

func (v *NullableWaypointTraitSymbol) Set(val *WaypointTraitSymbol) {
	v.value = val
	v.isSet = true
}

func (v NullableWaypointTraitSymbol) IsSet() bool {
	return v.isSet
}

func (v *NullableWaypointTraitSymbol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWaypointTraitSymbol(val *WaypointTraitSymbol) *NullableWaypointTraitSymbol {
	return &NullableWaypointTraitSymbol{value: val, isSet: true}
}

func (v NullableWaypointTraitSymbol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWaypointTraitSymbol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

