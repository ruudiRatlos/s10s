/*
SpaceTraders API

SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   

API version: 2.0.0
Contact: joel@spacetraders.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// checks if the Register201ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Register201ResponseData{}

// Register201ResponseData struct for Register201ResponseData
type Register201ResponseData struct {
	Agent Agent `json:"agent"`
	Contract Contract `json:"contract"`
	Faction Faction `json:"faction"`
	Ship Ship `json:"ship"`
	// A Bearer token for accessing secured API endpoints.
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _Register201ResponseData Register201ResponseData

// NewRegister201ResponseData instantiates a new Register201ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegister201ResponseData(agent Agent, contract Contract, faction Faction, ship Ship, token string) *Register201ResponseData {
	this := Register201ResponseData{}
	this.Agent = agent
	this.Contract = contract
	this.Faction = faction
	this.Ship = ship
	this.Token = token
	return &this
}

// NewRegister201ResponseDataWithDefaults instantiates a new Register201ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegister201ResponseDataWithDefaults() *Register201ResponseData {
	this := Register201ResponseData{}
	return &this
}

// GetAgent returns the Agent field value
func (o *Register201ResponseData) GetAgent() Agent {
	if o == nil {
		var ret Agent
		return ret
	}

	return o.Agent
}

// GetAgentOk returns a tuple with the Agent field value
// and a boolean to check if the value has been set.
func (o *Register201ResponseData) GetAgentOk() (*Agent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Agent, true
}

// SetAgent sets field value
func (o *Register201ResponseData) SetAgent(v Agent) {
	o.Agent = v
}

// GetContract returns the Contract field value
func (o *Register201ResponseData) GetContract() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.Contract
}

// GetContractOk returns a tuple with the Contract field value
// and a boolean to check if the value has been set.
func (o *Register201ResponseData) GetContractOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contract, true
}

// SetContract sets field value
func (o *Register201ResponseData) SetContract(v Contract) {
	o.Contract = v
}

// GetFaction returns the Faction field value
func (o *Register201ResponseData) GetFaction() Faction {
	if o == nil {
		var ret Faction
		return ret
	}

	return o.Faction
}

// GetFactionOk returns a tuple with the Faction field value
// and a boolean to check if the value has been set.
func (o *Register201ResponseData) GetFactionOk() (*Faction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Faction, true
}

// SetFaction sets field value
func (o *Register201ResponseData) SetFaction(v Faction) {
	o.Faction = v
}

// GetShip returns the Ship field value
func (o *Register201ResponseData) GetShip() Ship {
	if o == nil {
		var ret Ship
		return ret
	}

	return o.Ship
}

// GetShipOk returns a tuple with the Ship field value
// and a boolean to check if the value has been set.
func (o *Register201ResponseData) GetShipOk() (*Ship, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ship, true
}

// SetShip sets field value
func (o *Register201ResponseData) SetShip(v Ship) {
	o.Ship = v
}

// GetToken returns the Token field value
func (o *Register201ResponseData) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *Register201ResponseData) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *Register201ResponseData) SetToken(v string) {
	o.Token = v
}

func (o Register201ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Register201ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agent"] = o.Agent
	toSerialize["contract"] = o.Contract
	toSerialize["faction"] = o.Faction
	toSerialize["ship"] = o.Ship
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Register201ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agent",
		"contract",
		"faction",
		"ship",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegister201ResponseData := _Register201ResponseData{}

	err = json.Unmarshal(data, &varRegister201ResponseData)

	if err != nil {
		return err
	}

	*o = Register201ResponseData(varRegister201ResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agent")
		delete(additionalProperties, "contract")
		delete(additionalProperties, "faction")
		delete(additionalProperties, "ship")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRegister201ResponseData struct {
	value *Register201ResponseData
	isSet bool
}

func (v NullableRegister201ResponseData) Get() *Register201ResponseData {
	return v.value
}

func (v *NullableRegister201ResponseData) Set(val *Register201ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableRegister201ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableRegister201ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegister201ResponseData(val *Register201ResponseData) *NullableRegister201ResponseData {
	return &NullableRegister201ResponseData{value: val, isSet: true}
}

func (v NullableRegister201ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegister201ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


